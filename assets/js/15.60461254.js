(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{223:function(e,t,i){"use strict";i.r(t);var n=i(0),a=Object(n.a)({},(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[i("h1",{attrs:{id:"genesis"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#genesis"}},[e._v("#")]),e._v(" Genesis")]),e._v(" "),i("p",[e._v("The "),i("code",[e._v("genesis.json")]),e._v(" file defines the initial state of the Crypto.com chain. On top of the standard "),i("a",{attrs:{href:"https://docs.tendermint.com/master/tendermint-core/using-tendermint.html#genesis",target:"_blank",rel:"noopener noreferrer"}},[e._v("tendermint genesis"),i("OutboundLink")],1),e._v(" format, we customize our own genesis file and facilitate the special features of the Crypto.com chain. Sample genesis file can be found "),i("a",{attrs:{href:"https://github.com/crypto-com/chain/blob/master/docker/config/devnet/tendermint/genesis.json",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),i("OutboundLink")],1)]),e._v(" "),i("h2",{attrs:{id:"fields-in-genesis"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#fields-in-genesis"}},[e._v("#")]),e._v(" Fields in genesis")]),e._v(" "),i("p",[e._v("Specifically, the genesis file includes the following fields:")]),e._v(" "),i("ul",[i("li",[i("p",[i("code",[e._v('"genesis_time"')]),e._v(":\nThe time of beginning of the blockchain")])]),e._v(" "),i("li",[i("p",[i("code",[e._v('"chain_id"')]),e._v(":\nA unique identifier for the blockchain. The "),i("em",[e._v('"network id"')]),e._v(" is the last two hex characters of this field. See "),i("RouterLink",{attrs:{to:"/getting-started/chain-id-and-network-id.html"}},[e._v("this")]),e._v(" for further details.")],1)]),e._v(" "),i("li",[i("p",[i("code",[e._v('"app_hash"')]),e._v(":\nThe expected application hash upon genesis (returning from the chain-abci).")])]),e._v(" "),i("li",[i("p",[i("code",[e._v('"app_state"')]),e._v(":\nThe application state.")]),e._v(" "),i("ul",[i("li",[i("code",[e._v('"council_nodes"')]),e._v(":\nThe initial validator set.\n"),i("ul",[i("li",[i("code",[e._v('"keypackage"')]),e._v(":\nThe public information that other nodes can use for key agreement, see "),i("a",{attrs:{href:"https://github.com/mlswg/mls-protocol/blob/master/draft-ietf-mls-protocol.md#key-packages",target:"_blank",rel:"noopener noreferrer"}},[e._v("this"),i("OutboundLink")],1),e._v(" for further details.")])])]),e._v(" "),i("li",[i("code",[e._v('"distribution')]),e._v(":\nThe initial distribution and bonding state of the tokens.")]),e._v(" "),i("li",[i("code",[e._v('"network_params"')]),e._v(":\nThe network parameters\n"),i("ul",[i("li",[i("code",[e._v('"initial_fee_policy"')]),e._v(":\nThe transaction fee policy.")]),e._v(" "),i("li",[i("code",[e._v('"jailing_config"')]),e._v(":\nThe configuration of punishment (jailing)\n"),i("ul",[i("li",[i("code",[e._v('"block_signing_window"')]),e._v(":\nThe size of the sliding window for calculating validators's liveness.")]),e._v(" "),i("li",[i("code",[e._v('"missed_block_threshold"')]),e._v(":\nThe threshold of total missed blocks.")])])]),e._v(" "),i("li",[i("code",[e._v('"max_validators"')]),e._v(":\nThe maximum number of validator.")]),e._v(" "),i("li",[i("code",[e._v('"required_council_node_stake"')]),e._v(":\nThe minimum staking amount required to be a validator.")]),e._v(" "),i("li",[i("code",[e._v('"rewards_config"')]),e._v(":\nConfiguration of validator's reward.\n"),i("ul",[i("li",[i("code",[e._v('"monetary_expansion_cap"')]),e._v(":\nThe total amount of tokens reserved for validator's reward, in basic unit.")]),e._v(" "),i("li",[i("code",[e._v('"monetary_expansion_r0"')]),e._v(":\nThe upper bound for the reward rate per annum.")]),e._v(" "),i("li",[i("code",[e._v('"monetary_expansion_tau"')]),e._v(":\nThe initial value of tau in the reward function.")]),e._v(" "),i("li",[i("code",[e._v('"monetary_expansion_decay"')]),e._v(":\nThe decay rate of tau.")]),e._v(" "),i("li",[i("code",[e._v('"reward_period_seconds"')]),e._v(":\nThe period of reward being distributed, in seconds.")])])]),e._v(" "),i("li",[i("code",[e._v('"slashing_config"')]),e._v(":\nConfiguration of validator's punishment.\n"),i("ul",[i("li",[i("code",[e._v('"byzantine_slash_percent"')]),e._v(":\nThe maximum percentage of stake reduction for byzantine validators.")]),e._v(" "),i("li",[i("code",[e._v('"liveness_slash_percent"')]),e._v(":\nThe maximum percentage of stake reduction for validators with low availability.")])])])])])])]),e._v(" "),i("li",[i("p",[i("code",[e._v('"consensus_params"')]),e._v(":\nThe consensus critical parameters that determine the validity of blocks.")]),e._v(" "),i("ul",[i("li",[i("p",[i("code",[e._v('"block"')]),e._v(":\nThe block formation structure.")]),e._v(" "),i("ul",[i("li",[i("code",[e._v('"max_bytes"')]),e._v(":\nThe maximum block size, in bytes.")]),e._v(" "),i("li",[i("code",[e._v('"max_gas"')]),e._v(':\nThe default value is "-1", i.e., no rules about gas are enforced.')]),e._v(" "),i("li",[i("code",[e._v('"time_iota_ms"')]),e._v(":\nThe minimum time increment between consecutive blocks, in milliseconds.")])])]),e._v(" "),i("li",[i("p",[i("code",[e._v('"evidence"')]),e._v(":\nThe configuration of evidence of malfeasance by validators.")]),e._v(" "),i("ul",[i("li",[i("code",[e._v('"max_age_num_blocks"')]),e._v(":\n"),i("em",[e._v("This field is to be deprecated.")])]),e._v(" "),i("li",[i("code",[e._v('"max_age_duration"')]),e._v(':\nThe maximum age of evidence, in nanoseconds. Any evidence older than this will be rejected. It is also the "unbonding period", the time duration of unbonding.')])])]),e._v(" "),i("li",[i("p",[i("code",[e._v('"validator"')])]),e._v(" "),i("ul",[i("li",[i("code",[e._v('"pub_key_types"')]),e._v(": The supported validator public key types.")])])])])]),e._v(" "),i("li",[i("p",[i("code",[e._v('"validators"')]),e._v(":\nThe initial state of the validator set.")]),e._v(" "),i("ul",[i("li",[i("code",[e._v('"address"')]),e._v(": The address of the validator (hash of the validator's public key). Note that the validator is identified by its address.")]),e._v(" "),i("li",[i("code",[e._v('"name"')]),e._v(": The name of the validator, which should correspond to the name in "),i("em",[e._v('"council_nodes"')]),e._v(".")]),e._v(" "),i("li",[i("code",[e._v('"power"')]),e._v(": The voting power of the validator, which should match with the bonded amount of its related staking address in "),i("em",[e._v('"distribution"')]),e._v(" in full units.")]),e._v(" "),i("li",[i("code",[e._v('"pub_key"')]),e._v(" "),i("ul",[i("li",[i("code",[e._v('"type"')]),e._v(": The validator public key types, which should be one of the supported types in "),i("em",[e._v('"pub_key_types"')]),e._v(".")]),e._v(" "),i("li",[i("code",[e._v('"value"')]),e._v(": The base64 encoding of validator's public key, which should correspond to the "),i("em",[e._v('"value"')]),e._v(" of the validator in "),i("em",[e._v('"council_nodes"')]),e._v(".")])])])])])]),e._v(" "),i("h2",{attrs:{id:"genesis-fingerprint"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#genesis-fingerprint"}},[e._v("#")]),e._v(" Genesis fingerprint")]),e._v(" "),i("p",[e._v("Light client allows users to access and interact with the blockchain without having to run a full node. To ensure the light client is served by a full node with the correct blockchain data, we can compute the "),i("strong",[e._v("genesis fingerprint")]),e._v(" locally beforehand and check it against the full node that we are connecting to.")]),e._v(" "),i("p",[e._v("Specifically, this "),i("strong",[e._v("genesis fingerprint")]),e._v(" is computed by the "),i("code",[e._v("compute_genesis_fingerprint")]),e._v(" function: where we take "),i("code",[e._v('"genesis_time"')]),e._v(","),i("code",[e._v('"app_hash"')]),e._v(", "),i("code",[e._v('"consensus_params"')]),e._v("; and "),i("code",[e._v('"chain_id"')]),e._v(" from the genesis file as inputs and hash it by the "),i("em",[e._v("blake3")]),e._v(" hash function.")]),e._v(" "),i("p",[e._v("We can use the development tool "),i("em",[e._v("dev-utils")]),e._v(" to generate this genesis fingerprint from the "),i("code",[e._v("genesis.json")]),e._v(" file in the default tendermint directory "),i("code",[e._v("~/.tendermint/config")]),e._v(", for example:")]),e._v(" "),i("div",{staticClass:"language-bash extra-class"},[i("pre",{pre:!0,attrs:{class:"language-bash"}},[i("code",[e._v("$ ./dev-utils genesis fingerprint\n85828B9048F3A38C0446CFD8EFF1A33CE7F299E6605001238B63684E9633EE4E\n")])])]),i("div",{staticClass:"custom-block warning"},[i("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),i("p",[e._v("this doc may be outdated and is subject to revision")])]),e._v(" "),i("p",[e._v("The initial state of the network is started from the existing ERC20 contract on Ethereum. On the Ethereum mainnet, it is 0xA0b73E1Ff0B80914AB6fe0444E65848C4C34450b.")]),e._v(" "),i("p",[e._v("The current genesis procedure is the following:")]),e._v(" "),i("ol",[i("li",[e._v("The initial set of validator (council node) identities is established: each council node should have an associated validator public key (from the Tendermint Ed25519 keypair, used for signing blocks) and initial staking address (same as Ethereum), …")]),e._v(" "),i("li",[e._v("The initial network parameters (e.g. minimum stake amounts) are chosen")]),e._v(" "),i("li",[e._v("At a determined time, the list of ERC20 holders is snapshotted / computed from the Ethereum network.")]),e._v(" "),i("li",[e._v("The list should contain three dedicated addresses for:")])]),e._v(" "),i("ul",[i("li",[e._v("Secondary distribution and launch incentive (0x20a0bee429d6907e556205ef9d48ab6fe6a55531 and 0x35f517cab9a37bc31091c2f155d965af84e0bc85 on the Ethereum mainnet)")]),e._v(" "),i("li",[e._v("Long term incentive (0x71507ee19cbc0c87ff2b5e05d161efe2aac4ee07 on the Ethereum mainnet)")])]),e._v(" "),i("p",[e._v("The balances of these dedicated addresses are put to the initial “Rewards Pool” (where transaction fees are paid to and network operation rewards are paid from).")]),e._v(" "),i("ol",[i("li",[e._v("For every ERC20 holder address in the initial distribution, besides the above three addresses, the following rules are used for computing the initial genesis state:")])]),e._v(" "),i("ul",[i("li",[e._v("If the address is owned / controlled by a smart contract, its balance goes to the initial “Rewards Pool”")])]),e._v(" "),i("div",{staticClass:"custom-block warning"},[i("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),i("p",[e._v("DEX, multisig etc. contracts should be avoided during the Step 3")])]),e._v(" "),i("ul",[i("li",[e._v("If the address is an externally owned account and corresponds to the initial staking address of one of council nodes, its balance starts as “bonded” in the corresponding staked state (see "),i("a",{attrs:{href:"./transaction-accounting-model"}},[e._v("accounting mode")]),e._v(" for more details).")]),e._v(" "),i("li",[e._v("Otherwise (i.e. the address is an externally owned account, but not of any validators), the address balance starts as “unbonded” in the corresponding staked state (see "),i("a",{attrs:{href:"./transaction-accounting-model"}},[e._v("accounting mode")]),e._v(" for more details).")])]),e._v(" "),i("p",[e._v("From this initial genesis state, the initial “application hash” (APP HASH) is computed and set in the corresponding genesis.json file of Tendermint and compiled statically into the enclave binaries (that need to be signed by the developer production keys).")]),e._v(" "),i("h2",{attrs:{id:"tendermint-extra-information"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#tendermint-extra-information"}},[e._v("#")]),e._v(" Tendermint extra information")]),e._v(" "),i("p",[e._v("As described in "),i("a",{attrs:{href:"./consensus"}},[e._v("consensus")]),e._v(", Tendermint executes with the application-specific code via ABCI.")]),e._v(" "),i("p",[e._v("The genesis information (network parameters, initial validators etc.) is set in the "),i("code",[e._v("app_data")]),e._v(" field in genesis.json – this information is then passed to the ABCI application in the InitChainRequest.")])])}),[],!1,null,null,null);t.default=a.exports}}]);