(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{391:function(t,e,a){"use strict";a.r(e);var n=a(42),s=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"transaction"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#transaction"}},[t._v("#")]),t._v(" Transaction")]),t._v(" "),a("h2",{attrs:{id:"transaction-identifier"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#transaction-identifier"}},[t._v("#")]),t._v(" Transaction Identifier")]),t._v(" "),a("p",[t._v("Each transaction has an identifier (typically shortened as TX ID). It is defined as")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("blake3_hash(SCALE-encoded transaction binary data)")])])]),t._v(" "),a("tbody")]),t._v(" "),a("p",[t._v("See "),a("a",{attrs:{href:"./serialization"}},[t._v("serialization")]),t._v(" for more details about the transaction binary format.")]),t._v(" "),a("h2",{attrs:{id:"witness"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#witness"}},[t._v("#")]),t._v(" Witness")]),t._v(" "),a("p",[t._v("See "),a("a",{attrs:{href:"./signature-schemes"}},[t._v("signature-schemes")]),t._v(" for more details")]),t._v(" "),a("h2",{attrs:{id:"textual-address-representation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#textual-address-representation"}},[t._v("#")]),t._v(" Textual Address Representation")]),t._v(" "),a("p",[t._v("Crypto.com Chain supports threshold / multi-signature addresses that are represented as a single hash (see "),a("a",{attrs:{href:"./signature-schemes"}},[t._v("signature-schemes")]),t._v(") which is different from Ethereum.")]),t._v(" "),a("p",[t._v("To represent the underlying byte array in a textual form, "),a("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0173.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[t._v("Bech32"),a("OutboundLink")],1),t._v(" is used. The convention for the human-readable prefix is the following:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("cro")]),t._v(": mainnet payment")]),t._v(" "),a("li",[a("code",[t._v("tcro")]),t._v(": testnet payment")]),t._v(" "),a("li",[a("code",[t._v("dcro")]),t._v(": local devnet/regtest payment")]),t._v(" "),a("li",[t._v("staking addresses (see "),a("a",{attrs:{href:"./transaction-accounting-model"}},[t._v("accounting")]),t._v(") are textually represented in hexadecimal encoding to match the initial Ethereum ones")])]),t._v(" "),a("h2",{attrs:{id:"transaction-fees"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#transaction-fees"}},[t._v("#")]),t._v(" Transaction Fees")]),t._v(" "),a("p",[t._v("The purpose of transaction fees in the initial prototype is an anti-spam measure, i.e. to prevent broadcasting valid transactions indefinitely.\nThe general scheme is:")]),t._v(" "),a("ul",[a("li",[t._v('If the transaction type allows indefinite valid transactions in an immediate time span (e.g. "transfer"), a fee (calculated as below) must be paid -- i.e. each transaction should be validated that it included this sufficient fee. Note that the fee amount must be exactly equal to the computed one (this is to prevent errors where a much larger fee could be accidentally paid if the fee amount could be set arbitrarily large).')]),t._v(" "),a("li",[t._v('If the transaction type allows a limited number of valid transactions, there is no fee. One example is "unjail" where only one valid transaction can be sent for a given state after the unjailing period.')])]),t._v(" "),a("p",[t._v("More details can be found in the "),a("RouterLink",{attrs:{to:"/modules/transactions.html"}},[t._v("transactions document")]),t._v(".")],1),t._v(" "),a("p",[t._v('(In the future, if necessary, a dynamic Dutch auction-style fee market may be introduced for congestion control -- this may, however, be outside of the consensus state machine, i.e. "off-chain", in order to incentivize full nodes or other network layers.)')]),t._v(" "),a("h3",{attrs:{id:"fee-calculation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fee-calculation"}},[t._v("#")]),t._v(" Fee Calculation")]),t._v(" "),a("p",[t._v("The initial prototype uses a linear fee system. The minimal transaction fee is defined according to the formula:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<BASE_AMOUNT> + <PER_BYTE> * size\n")])])]),a("p",[a("code",[t._v("BASE_AMOUNT")]),t._v(" and "),a("code",[t._v("PER_BYTE")]),t._v(" are special "),a("RouterLink",{attrs:{to:"/getting-started/network-parameters.html"}},[t._v("network parameters")]),t._v(" in a fraction of CRO. "),a("code",[t._v("size")]),t._v(" is the serialized transaction data’s size in bytes.")],1),t._v(" "),a("p",[t._v("To verify a "),a("a",{attrs:{href:"#transaction-types"}},[t._v("basic transaction")]),t._v(" one would need to check:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("sum(inputs amounts) or account.unbonded/bonded == sum(outputs amounts) + fee\n")])])]),a("p",[t._v("The transaction fee goes to the "),a("a",{attrs:{href:"./reward-and-punishments#validator-rewards"}},[t._v("rewards pool")]),t._v(" to reward the validations.")]),t._v(" "),a("h2",{attrs:{id:"transaction-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#transaction-types"}},[t._v("#")]),t._v(" Transaction Types")]),t._v(" "),a("h3",{attrs:{id:"basic-types-plain-version"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#basic-types-plain-version"}},[t._v("#")]),t._v(" Basic Types (plain version):")]),t._v(" "),a("p",[t._v(":::tip NOTE\nAll these types should also contain metadata, such as "),a("RouterLink",{attrs:{to:"/getting-started/chain-id-and-network-id.html#network-id"}},[t._v("network ID")]),t._v(". Furthermore, some of these transactions will be obfuscated to provide "),a("RouterLink",{attrs:{to:"/getting-started/transaction-privacy.html"}},[t._v("privacy protections")]),t._v(" to the users.\n:::")],1),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Tx type")]),t._v(" "),a("th",[t._v("Inputs")]),t._v(" "),a("th",[t._v("Outputs")]),t._v(" "),a("th",[t._v("Fees involved?")]),t._v(" "),a("th",[t._v("Obfuscated?")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("TransferTx")])]),t._v(" "),a("td",[t._v("UTXOs")]),t._v(" "),a("td",[t._v("UTXOs")]),t._v(" "),a("td",[t._v("Yes")]),t._v(" "),a("td",[t._v("Yes")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("DepositStakeTx")])]),t._v(" "),a("td",[t._v("UTXOs")]),t._v(" "),a("td",[t._v("Deposit the bonded amount to the specified account")]),t._v(" "),a("td",[t._v("Yes")]),t._v(" "),a("td",[t._v("Yes")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("WithdrawUnbondedTx")])]),t._v(" "),a("td",[t._v("Nonce, account")]),t._v(" "),a("td",[t._v("UTXOs")]),t._v(" "),a("td",[t._v("Yes")]),t._v(" "),a("td",[t._v("Yes")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("UnbondStakeTx")])]),t._v(" "),a("td",[t._v("Nonce, amount, account")]),t._v(" "),a("td",[t._v("Moves funds from "),a("code",[t._v("bonded")]),t._v(" to "),a("code",[t._v("unbonded")]),t._v(" under the same account with timelock")]),t._v(" "),a("td",[t._v("Yes")]),t._v(" "),a("td",[t._v("No")])])])]),t._v(" "),a("p",[t._v("Please also refer to this "),a("RouterLink",{attrs:{to:"/getting-started/send_your_first_transaction.html#send-your-first-transaction"}},[t._v("flowchart")]),t._v(" that shows different types of transaction and how they interact with each other.")],1),t._v(" "),a("h3",{attrs:{id:"advanced-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#advanced-types"}},[t._v("#")]),t._v(" Advanced Types:")]),t._v(" "),a("p",[t._v("Besides the above-mentioned basic transactions, there are some advanced types of transactions related to the council node and service node state metadata management, for example:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("UnjailTx")]),t._v(": This transaction can be broadcasted to "),a("RouterLink",{attrs:{to:"/wallets/client-cli.html#unjail-unjailing-a-validator"}},[t._v("un-jail")]),t._v(" a node. It takes "),a("em",[t._v("nonce")]),t._v(", "),a("em",[t._v("account")]),t._v(" and has to be signed by the account’s corresponding key.")],1),t._v(" "),a("li",[a("code",[t._v("NodeJoinTx")]),t._v(": Anyone who wishes to become a council node can broadcast this transaction. It takes "),a("em",[t._v("council node data")]),t._v(", "),a("em",[t._v("staking address")]),t._v(" and has to be signed by the node's staking key. For further details on the process of joining the Crypto.com chain as a validator, please refer to this "),a("RouterLink",{attrs:{to:"/getting-started/node-joining.html"}},[t._v("documentation")]),t._v(".")],1)]),t._v(" "),a("p",[t._v(":::tip Note\nThere will be no transaction fee for advanced types Tx in the initial prototype.\n:::")]),t._v(" "),a("h2",{attrs:{id:"cross-currency-transactions-and-settlements"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cross-currency-transactions-and-settlements"}},[t._v("#")]),t._v(" Cross-currency transactions and settlements")]),t._v(" "),a("p",[t._v("A proof of concept on the cross-currency transfers and settlement on CRO can be found in this "),a("a",{attrs:{href:"https://github.com/crypto-com/settlement-cro",target:"_blank",rel:"noopener noreferrer"}},[t._v("repository"),a("OutboundLink")],1),t._v(". It demonstrates how to configure "),a("a",{attrs:{href:"https://github.com/interledger",target:"_blank",rel:"noopener noreferrer"}},[t._v("Interledger"),a("OutboundLink")],1),t._v(" nodes for performing CRO-ETH cross-currency transactions between the Ethereum network (testnet or mainnet) and the CRO devnet.")])])}),[],!1,null,null,null);e.default=s.exports}}]);