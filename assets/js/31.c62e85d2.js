(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{243:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"reward"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reward"}},[t._v("#")]),t._v(" Reward")]),t._v(" "),s("h2",{attrs:{id:"abstract"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#abstract"}},[t._v("#")]),t._v(" Abstract")]),t._v(" "),s("p",[t._v("Rewarding module enable crypto chain to reward protocol participators, the design should meet following requirements:")]),t._v(" "),s("ul",[s("li",[t._v("The total supply of CRO is fixed.")]),t._v(" "),s("li",[t._v('The distribution should be "fair", i.e. all honest participators should get rewards, non-participators should not, and the amount of rewards get distributed to a validator should be proportional to it\'s contribution (sum of the voting power of each vote).')]),t._v(" "),s("li",[t._v("The newly emitted coins for rewarding is adjusted according to "),s("a",{attrs:{href:"#total-staking"}},[t._v("total staking")]),t._v(" and current block time.")])]),t._v(" "),s("p",[t._v("The basic procedure is:")]),t._v(" "),s("ul",[s("li",[t._v("Record participators for each block, sum the voting powers for each participator at the vote time.")]),t._v(" "),s("li",[t._v("Distribute the accumulated reward pool according to the recorded sum powers at the end of reward period.")])]),t._v(" "),s("p",[t._v("For example, in one reward period with N blocks, validator "),s("code",[t._v("A")]),t._v(" only participate in the first block, and all the other validators participate in all blocks, assuming the validator set is static during this period, then we have:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("p: voting power of validator A\np': sum of voting power of all other validators\n\nblock1: participators: p', p\nblock2: participators: p'\nblock3: participators: p'\n...\nblockN: participators: p'\n\n# The rewards of A is:\nreward_a = reward_pool * p / (p + p' * N)\n")])])]),s("p",[t._v("The result of reward distribution should be written into events of block results.")]),t._v(" "),s("h3",{attrs:{id:"concepts"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#concepts"}},[t._v("#")]),t._v(" Concepts")]),t._v(" "),s("h4",{attrs:{id:"reward-participator"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reward-participator"}},[t._v("#")]),t._v(" Reward participator")]),t._v(" "),s("p",[t._v("All the validators who follow the protocol honestly should participate in the reward distribution.")]),t._v(" "),s("p",[t._v("In tendermint's terms, following the protocol honestly means being a signed voter in "),s("code",[t._v("last_commit_info")]),t._v(" of "),s("code",[t._v("BeginBlockRequest")]),t._v(".")]),t._v(" "),s("p",[t._v("It can be described precisely as:")]),t._v(" "),s("div",{staticClass:"language-rust extra-class"},[s("pre",{pre:!0,attrs:{class:"language-rust"}},[s("code",[t._v("begin_block_req\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("last_commit_info\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("votes\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("vote"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" vote"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("signed_last_block"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"reward-period"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reward-period"}},[t._v("#")]),t._v(" Reward period")]),t._v(" "),s("p",[t._v("Rewards are distributed to the validators periodically, the length of the period is configured in network parameter "),s("code",[t._v("reward_period_seconds")]),t._v(" in genesis config.")]),t._v(" "),s("h4",{attrs:{id:"reward-pool"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reward-pool"}},[t._v("#")]),t._v(" Reward pool")]),t._v(" "),s("p",[t._v("During the reward period, the following sources of funds are accumulated into reward pool:")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#monetary-expansion"}},[t._v("Monetary expansion")])]),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/getting-started/transaction.html#transaction-fees"}},[t._v("Transaction Fees")])],1),t._v(" "),s("li",[t._v("Slashings")])]),t._v(" "),s("p",[t._v("The reward pool gets accumulated throughout the whole reward period; it gets distributed once at the end of each reward period.")]),t._v(" "),s("p",[t._v("Due to fixed point calculations, there may be a few remainders from arithmetic operations after distribution. These remainder amounts should be left in the rewards pool for the next period.")]),t._v(" "),s("p",[t._v("If there is zero participant for the period, the rewards pool should be left to the next period, rather than get burned.")]),t._v(" "),s("h4",{attrs:{id:"total-staking"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#total-staking"}},[t._v("#")]),t._v(" Total staking")]),t._v(" "),s("p",[t._v("The sum of bonded coins of all active validators at some block.")]),t._v(" "),s("h4",{attrs:{id:"monetary-expansion"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#monetary-expansion"}},[t._v("#")]),t._v(" Monetary expansion")]),t._v(" "),s("p",[t._v("New coins are minted into the reward pool at the end of reward period.")]),t._v(" "),s("p",[t._v("The amount is calculated based on the total staking of current state and current block time.")]),t._v(" "),s("p",[t._v("The total minted coins for rewarding shouldn't exceed the amount configured in network parameter "),s("code",[t._v("monetary_expansion_cap")]),t._v(".")]),t._v(" "),s("p",[t._v("The calculation is as follows:")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("R0 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" network_parameter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"monetary_expansion_r0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# upper bound for the reward rate p.a.")]),t._v("\nP "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" network_parameter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"reward_period_seconds"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\ntau "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" current tau  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# refer to section "Decay of parameter tau"')]),t._v("\nS "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" total staking  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# refer to section "Total staking"')]),t._v("\nY "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("365")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# seconds of a year")]),t._v("\n\nCAP "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" network_parameter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"monetary_expansion_cap"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nminted "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" total minted coins so far  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# recorded in state")]),t._v("\n\nR "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("R0 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" exp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("S "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" tau"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nN "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" floor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("S "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("pow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" R"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" P "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" Y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nN "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" N "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" N "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# less precision requirement")]),t._v("\nresult "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("min")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("N"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" CAP "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" minted"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# the amount of newly minted coins")]),t._v("\n")])])]),s("h4",{attrs:{id:"decay-of-parameter-tau"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#decay-of-parameter-tau"}},[t._v("#")]),t._v(" Decay of parameter tau")]),t._v(" "),s("p",[t._v("The parameter "),s("code",[t._v("tau")]),t._v(" in the monetary expansion calculation should be initialized to network parameter "),s("code",[t._v("monetary_expansion_tau")]),t._v(" and gets decayed for each reward distribution.")]),t._v(" "),s("p",[t._v("The rate of decaying is configured in network parameter "),s("code",[t._v("monetary_expansion_decay")]),t._v(".")]),t._v(" "),s("p",[t._v("The calculation is like this:")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("rate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" network_parameter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"monetary_expansion_decay"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# init")]),t._v("\ntau "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" network_parameter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"monetary_expansion_tau"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# decay")]),t._v("\ntau "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tau "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" rate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("\n")])])]),s("p",[t._v("To prevent overflow of integer multiplication, it can be transformed into:")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("tau "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tau "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" rate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tau "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" rate\n")])])]),s("h4",{attrs:{id:"fixed-point-arithmetic"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fixed-point-arithmetic"}},[t._v("#")]),t._v(" Fixed point arithmetic")]),t._v(" "),s("p",[t._v("We should use continued fraction method to compute the "),s("code",[t._v("exp")]),t._v(" and "),s("code",[t._v("pow")]),t._v(" with fixed point arithmetics.")]),t._v(" "),s("p",[t._v("First we transform the power function into exponential and natural logarithm functions:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("pow(x, y) = exp(y * log(x))\n")])])]),s("p",[t._v("The "),s("code",[t._v("exp")]),t._v(" and "),s("code",[t._v("log")]),t._v(" are computed with continued fractions representation, using a form with better convergence:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("exp2(x, y) = exp(x / y)\nlog2(x, y) = log(1 + x / y)\n")])])]),s("p",[s("img",{attrs:{src:"https://wikimedia.org/api/rest_v1/media/math/render/svg/7aa8187974263e0f3e7cc293ca82d3dc3d75af90",alt:"MainEq1"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://wikimedia.org/api/rest_v1/media/math/render/svg/90abfa2132828fc8eea5d3551dfa4df25dbdfa87",alt:"MainEq2"}})]),t._v(" "),s("p",[t._v("With above substitutes, we can transform the formula like this:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("R = (R0 / 1000) * exp(-S/tau)\n  = R0 * exp2(-S, tau) / 1000\nN = S * (pow(1 + R, P / Y) - 1)\n  = S * (exp(P * log(1 + R) / Y) - 1)\n  = S * (exp2(P * log(1 + R), Y) - 1)\n  = S * (exp2(P * log(1 + R0 * exp2(-S, tau) / 1000), Y) - 1)\n  = S * (exp2(P * log2(R0 * exp2(-S, tau), 1000), Y) - 1)\n")])])]),s("p",[t._v("Break it down into simpler computation steps:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# To keep the intermediate numbers smaller\nS' = S / 10000000_00000000\ntau' = tau / 10000000_00000000\n\nn0 = exp2(-S', tau')\nn1 = log2(R0 * n0, 1000)\nn2 = exp2(P * n1, Y)\nn3 = floor(S * (n2 - 1))\nN  = n3 - n3 % 10000\n")])])]),s("blockquote",[s("p",[t._v("Fixed point number format: "),s("code",[t._v("I65F63")]),t._v(".")]),t._v(" "),s("p",[s("code",[t._v("exp2")]),t._v(" runs 25 iterations.")]),t._v(" "),s("p",[s("code",[t._v("log2")]),t._v(" runs 10 iterations.")])]),t._v(" "),s("p",[t._v("TODO, how to compute the continued fractions form of "),s("code",[t._v("exp2")]),t._v(" and "),s("code",[t._v("log2")]),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"implementation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#implementation"}},[t._v("#")]),t._v(" Implementation")]),t._v(" "),s("h3",{attrs:{id:"network-parameters"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#network-parameters"}},[t._v("#")]),t._v(" Network parameters")]),t._v(" "),s("div",{staticClass:"language-rust extra-class"},[s("pre",{pre:!0,attrs:{class:"language-rust"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" RewardsParameters "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// Reward period in seconds")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" reward_period_seconds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" u64"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// Maximum minted coins for rewards")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" monetary_expansion_cap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Coin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// Monetary expansion formula parameter R0")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" monetary_expansion_r0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Milli"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// Monetary expansion formula parameter tau")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" monetary_expansion_tau"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" u64"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// Decay rate of the parameter tau")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" monetary_expansion_decay"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" u64"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Validation of "),s("code",[t._v("RewardsParameters")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-rust extra-class"},[s("pre",{pre:!0,attrs:{class:"language-rust"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("impl")]),t._v(" RewardsParameters "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("validate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("->")]),t._v(" Result"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),s("span",{pre:!0,attrs:{class:"token lifetime-annotation symbol"}},[t._v("'static")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("monetary_expansion_r0 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Milli"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("integral")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Err")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"R0 can\'t > 1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("monetary_expansion_tau "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Err")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tau can\'t == 0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("reward_period_seconds "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("365")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("86400")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Err")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"reward period can\'t exceed 365 days"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("monetary_expansion_decay "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1_000_000")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Err")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"decay can\'t > 1_000_000"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Ok")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"state"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#state"}},[t._v("#")]),t._v(" State")]),t._v(" "),s("div",{staticClass:"language-rust extra-class"},[s("pre",{pre:!0,attrs:{class:"language-rust"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// Participate in the computation of app_hash, empty block should not modify")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" RewardState "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// Fees and slashings accumulated through current reward period")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" period_bonus"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Coin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// last block height that updated it")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" last_block_height"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" BlockHeight"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// last reward distribution time, default to the genesis time")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" last_distribution_time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Timespec"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// Record how many coins have been minted so far, shouldn't exceed the monetary_expansion_cap")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" minted"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Coin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// Current tau value of monetary expansion calculation")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" current_tau"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" u64"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" ValidatorState "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// Records the participators for reward distribution, the value is the sum of voting powers for each signed vote of the participator")]),t._v("\n    reward_participators"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" HashMap"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("StakingAddress"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" u64"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" ChainNodeApp "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" reward_state_updated"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" bool\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Use "),s("code",[t._v("u64")]),t._v(" for the sum of voting powers is enough, because total staking powers is smaller than 10 billion, so if maximum staking powers participates in all the blocks, the number of blocks we can support before "),s("code",[t._v("u64")]),t._v(" overflows is:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(">>> 9223372036854775807 / 10000000000\n922337203\n")])])]),s("p",[t._v("It should be more than enough for one reward period, but still the implementation should avoid panic or wrap-around when overflows happen in extreme case.")]),t._v(" "),s("h3",{attrs:{id:"predefined-symbols"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#predefined-symbols"}},[t._v("#")]),t._v(" Predefined symbols")]),t._v(" "),s("p",[t._v("In the following sections, we use following predefined symbols:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("reward_state")]),t._v(" for the current "),s("code",[t._v("RewardState")])]),t._v(" "),s("li",[s("code",[t._v("validator_state")]),t._v(" for the current "),s("code",[t._v("ValidatorState")])]),t._v(" "),s("li",[s("code",[t._v("node_state")]),t._v(" for the current "),s("code",[t._v("ChainNodeApp")])]),t._v(" "),s("li",[s("code",[t._v("network_parameter")]),t._v(" for the current "),s("code",[t._v("NetworkParameter")])])]),t._v(" "),s("h3",{attrs:{id:"abci-events"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#abci-events"}},[t._v("#")]),t._v(" ABCI Events")]),t._v(" "),s("h4",{attrs:{id:"begin-block"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#begin-block"}},[t._v("#")]),t._v(" Begin block")]),t._v(" "),s("p",[t._v("The main actions all happens in begin block event, it's the time we get reports of participators through "),s("code",[t._v("last_commit_info")]),t._v(", also the time the node state is consistent.")]),t._v(" "),s("ol",[s("li",[t._v("Collect the validator addresses of reward participators from "),s("code",[t._v("last_commit_info")]),t._v(".")]),t._v(" "),s("li",[t._v("Record them, and accumulate their voting powers.")]),t._v(" "),s("li",[t._v("If a reward period has passed, distribute the reward pool according to the participator statistics.")])]),t._v(" "),s("h5",{attrs:{id:"begin-block-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#begin-block-2"}},[t._v("#")]),t._v(" "),s("code",[t._v("begin_block")])]),t._v(" "),s("div",{staticClass:"language-rust extra-class"},[s("pre",{pre:!0,attrs:{class:"language-rust"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("begin_block")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" RequestBeginBlock"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" addrs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("last_commit_info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("votes\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("vote"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" vote"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("signed_last_block"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("vote"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_validator_address")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vote"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" addr "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" addrs "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Panic or not is decided by the implementator")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" staking_addr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("find_staking_address")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("addr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("unwrap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Panic or not is decided by the implementator")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" power "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_voting_power")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("staking_addr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("unwrap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" amount "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" u64"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("power"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" validator_state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("reward_participators"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("contains")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("staking_addr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Use saturating_add for better robustness")]),t._v("\n            validator_state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("reward_participators"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("staking_addr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" amount"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            validator_state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("reward_participators"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("staking_addr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" amount"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Use saturating_add for better robustness")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" reward_state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("last_distribution_time "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" network_parameter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("reward_period_seconds\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" node_state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("block_time "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Don't distribute rewards if reward period not reached yet")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" None"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    reward_state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("last_distribution_time "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" node_state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("block_time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Mark the dirty flag as soon as reward period reached.")]),t._v("\n    node_state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rewards_pool_updated "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" minted "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("min")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Use saturating_sub to prevent underflow")]),t._v("\n      network_parameter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("monetary_expansion_cap "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" reward_state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("minted"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Refer to the following sections for the implementation")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("monetary_expansion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Refer to the following sections for the implementation")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("total_staking")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          reward_state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("current_tau"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          network_parameter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("monetary_expansion_r0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          network_parameter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("reward_period_seconds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    reward_state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("minted "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" minted"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Decay the tau parameter, use the overflow avoid method mentioned above")]),t._v("\n    reward_state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("current_tau "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mul_micro")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        reward_state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("current_tau"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        network_parameter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("monetary_expansion_decay"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Total reward pool for this period")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" reward_pool "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" reward_state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("period_bonus "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" minted"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Use saturating_add for better robustness")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" sum_power "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" validator_state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("reward_participators"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Compute the rewards distribution,")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// compute `reward_pool * power / sum_power` for each participator")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" distribution "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vec!")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" sum_power "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If there is zero participator, the newly minted coins should be left to the next period")]),t._v("\n        reward_state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("period_bonus "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" minted"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Remaining coins after distribution")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" remains "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" reward_pool"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("addr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" power"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" validator_state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("reward_participators "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Use some type bigger than u64 (e.g. u128) to prevent overflow of multiplication")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" amount "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" reward_pool "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" power "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" sum_power"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            remains "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-=")]),t._v(" amount"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            distribution"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("addr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" amount"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Remains of distribution is left to the next period")]),t._v("\n        reward_state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("period_bonus "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" remains"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Add the rewards to the accounts, implementation is in following sections")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add_rewards")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("distribution"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Clear rewards statistics")]),t._v("\n    validator_state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("reward_participators"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("clear")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The Result (distribution, minted) should be written into block result event list")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h5",{attrs:{id:"monetary-expansion-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#monetary-expansion-2"}},[t._v("#")]),t._v(" "),s("code",[t._v("monetary_expansion")])]),t._v(" "),s("p",[t._v("TODO")]),t._v(" "),s("h5",{attrs:{id:"total-staking-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#total-staking-2"}},[t._v("#")]),t._v(" "),s("code",[t._v("total_staking")])]),t._v(" "),s("div",{staticClass:"language-rust extra-class"},[s("pre",{pre:!0,attrs:{class:"language-rust"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("total_staking")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" sum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" staking_addr "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" validator_state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("validators "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Panic or not is decided by implementator")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" account "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_account")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("staking_addr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("unwrap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        sum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" account"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bonded"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    sum\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h5",{attrs:{id:"add-rewards"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#add-rewards"}},[t._v("#")]),t._v(" "),s("code",[t._v("add_rewards")])]),t._v(" "),s("div",{staticClass:"language-rust extra-class"},[s("pre",{pre:!0,attrs:{class:"language-rust"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// accounts should be stored in merkle trie, the details are ignored here.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add_rewards")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dist"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" staking_addr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" amount "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" dist "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Panic or not is decided by implementator")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" account "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_account")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("staking_addr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("unwrap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        account"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bonded "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" amount"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"commit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#commit"}},[t._v("#")]),t._v(" Commit")]),t._v(" "),s("p",[t._v("Update "),s("code",[t._v("last_block_height")]),t._v(" if "),s("code",[t._v("RewardsPoolState")]),t._v(" changed:")]),t._v(" "),s("div",{staticClass:"language-rust extra-class"},[s("pre",{pre:!0,attrs:{class:"language-rust"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" node_state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("reward_state_updated "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    reward_state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("last_block_height "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" current_block_height"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    node_state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("reward_state_updated "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"hooks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hooks"}},[t._v("#")]),t._v(" Hooks")]),t._v(" "),s("h4",{attrs:{id:"when-validator-becomes-inactive-at-end-block"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#when-validator-becomes-inactive-at-end-block"}},[t._v("#")]),t._v(" When validator becomes inactive at "),s("code",[t._v("end_block")])]),t._v(" "),s("p",[t._v("When validator get jailed or unbonded enough to become inactive during a reward period, it's reward participation record should be removed, so it won't receive any rewards.")]),t._v(" "),s("div",{staticClass:"language-rust extra-class"},[s("pre",{pre:!0,attrs:{class:"language-rust"}},[s("code",[t._v("validator_state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("reward_participators"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("remove")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("staking_addr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"slashing-executed"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#slashing-executed"}},[t._v("#")]),t._v(" Slashing executed")]),t._v(" "),s("p",[t._v("When slashing executed, the "),s("code",[t._v("slashed_amount")]),t._v(" needs to be added to "),s("code",[t._v("period_bonus")]),t._v(" of "),s("code",[t._v("RewardState")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-rust extra-class"},[s("pre",{pre:!0,attrs:{class:"language-rust"}},[s("code",[t._v("reward_state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("period_bonus "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" slashed_amount"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nnode_state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rewards_pool_updated "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"fee-collected"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fee-collected"}},[t._v("#")]),t._v(" Fee collected")]),t._v(" "),s("p",[t._v("When transaction fees are collected, the amount needs to be added to "),s("code",[t._v("period_bonus")]),t._v(" of "),s("code",[t._v("RewardState")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-rust extra-class"},[s("pre",{pre:!0,attrs:{class:"language-rust"}},[s("code",[t._v("reward_state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("period_bonus "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" fees"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nnode_state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rewards_pool_updated "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);