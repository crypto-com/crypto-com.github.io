(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{247:function(t,a,e){"use strict";e.r(a);var s=e(0),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"transaction-processing"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#transaction-processing"}},[t._v("#")]),t._v(" Transaction processing")]),t._v(" "),e("blockquote",[e("p",[e("em",[e("strong",[t._v("Caution:")])]),t._v(" Some details are subject to changes.")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("check_tx")]),t._v(" and "),e("code",[t._v("deliver_tx")]),t._v(" events share the same transaction processing code, the only difference is they operate\non different storage buffers (refer to "),e("a",{attrs:{href:"#"}},[t._v("buffered-storage")]),t._v(").")]),t._v(" "),e("p",[t._v("In "),e("code",[t._v("commit")]),t._v(" event, the "),e("code",[t._v("deliver_tx")]),t._v(" buffer is flushed, while the "),e("code",[t._v("check_tx")]),t._v(" buffer is dropped.")]),t._v(" "),e("h2",{attrs:{id:"transaction-types"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#transaction-types"}},[t._v("#")]),t._v(" Transaction types")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("Enclave\n  Transfer\n  Deposit\n  Withdraw\nPublic\n  Unbond\n  Unjail\n  NodeJoin\n")])])]),e("p",[t._v("The enclave transactions are obfuscated in enclave, so they can only be verified completely in the validation enclave,\nwhile the public transactions don't need enclave to verify.")]),t._v(" "),e("p",[t._v("The basic process procedure is like this:")]),t._v(" "),e("div",{staticClass:"language-rust extra-class"},[e("pre",{pre:!0,attrs:{class:"language-rust"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" context "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),t._v(" tx "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Enclave")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tx"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" action "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("validate_enclave_tx")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("storage"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" context"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tx"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("execute_enclave_tx")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("storage"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tx"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" action"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Public")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tx"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("process_public_tx")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("storage"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" context"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tx"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h3",{attrs:{id:"context"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#context"}},[t._v("#")]),t._v(" Context")]),t._v(" "),e("div",{staticClass:"language-rust extra-class"},[e("pre",{pre:!0,attrs:{class:"language-rust"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" ChainInfo "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// minimal fee computed based on tx size expected to be paid")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" min_fee_computed"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Fee"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// network hexamedical ID")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" chain_hex_id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" u8"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// block time of current processing block")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" block_time"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Timespec"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// height of current processing block")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" block_height"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" BlockHeight"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// related network parameters, used by validation of withdraw tx")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" unbonding_period"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" u32"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h2",{attrs:{id:"enclave-transactions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#enclave-transactions"}},[t._v("#")]),t._v(" Enclave transactions")]),t._v(" "),e("h3",{attrs:{id:"validate-enclave-tx"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#validate-enclave-tx"}},[t._v("#")]),t._v(" "),e("code",[t._v("validate_enclave_tx")])]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Check inputs unspent and load sealed log for them, and pass to validation enclave")])]),t._v(" "),e("li",[e("p",[t._v("Load staking state for withdraw and deposit transactions, and pass to validation enclave")])]),t._v(" "),e("li",[e("p",[t._v("Validation enclave decrypt the transaction, unseal the inputs and do the following validations:")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("Check tx attributes ("),e("code",[t._v("chain_hex_id")]),t._v(", "),e("code",[t._v("app_version")]),t._v(")")])]),t._v(" "),e("li",[e("p",[t._v("Check inputs/outputs basic")]),t._v(" "),e("ul",[e("li",[t._v("Not empty")]),t._v(" "),e("li",[t._v("No duplicates")])])]),t._v(" "),e("li",[e("p",[t._v("Check input timelock")])]),t._v(" "),e("li",[e("p",[t._v("Verify inputs witnesses for transfer/deposit")])]),t._v(" "),e("li",[e("p",[t._v("Verify staking address witness for withdraw")])]),t._v(" "),e("li",[e("p",[t._v("Check staking state not jailed for withdraw/deposit")])]),t._v(" "),e("li",[e("p",[t._v("Check staking state for withdraw:")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("nonce")]),t._v(" match")]),t._v(" "),e("li",[e("code",[t._v("context.block_time >= unbonded_from")])]),t._v(" "),e("li",[e("code",[t._v("unbonded != 0")])]),t._v(" "),e("li",[e("code",[t._v("outputs.iter().all(|x| x.valid_from == account.unbonded_from)")])])])]),t._v(" "),e("li",[e("p",[t._v("Check fee and input/output sum amounts:")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Transfer")]),t._v(" "),e("p",[e("code",[t._v("sum_input - sum_output == min_fee")])]),t._v(" "),e("p",[t._v("Return "),e("code",[t._v("sum_input - sum_output")]),t._v(" as paid fee")])]),t._v(" "),e("li",[e("p",[t._v("Deposit")]),t._v(" "),e("p",[e("code",[t._v("sum_input > min_fee")])]),t._v(" "),e("p",[t._v("Return "),e("code",[t._v("sum_input - min_fee")]),t._v(" as deposit amount")])]),t._v(" "),e("li",[e("p",[t._v("Withdraw")]),t._v(" "),e("p",[e("code",[t._v("account.unbonded - sum_output == min_fee")])]),t._v(" "),e("p",[t._v("Return "),e("code",[t._v("account.unbonded - sum_output")]),t._v(" as paid fee")])])])])])])]),t._v(" "),e("h3",{attrs:{id:"execute-enclave-tx"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#execute-enclave-tx"}},[t._v("#")]),t._v(" "),e("code",[t._v("execute_enclave_tx")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("TxEnclaveAction")]),t._v(" is returned as the result of success validation of enclave transaction:")]),t._v(" "),e("div",{staticClass:"language-rust extra-class"},[e("pre",{pre:!0,attrs:{class:"language-rust"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" TxEnclaveAction "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    Transfer "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        fee"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Fee"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        spend_utxo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Vec"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("TxoPointer"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        create_utxo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TxoIndex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        sealed_log"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" SealedLog"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    Deposit "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        fee"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Fee"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        spend_utxo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Vec"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("TxoPointer"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        deposit"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("StakedStateAddress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Coin"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    Withdraw "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        fee"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Fee"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// withdraw supposed to withdraw all unbonded,")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// the amount here only to do sanity check")]),t._v("\n        withdraw"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("StakedStateAddress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Coin"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        create_utxo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TxoIndex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        sealed_log"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" SealedLog"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("It's executed as follows:")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("fee")])]),t._v(" "),e("p",[t._v("Written into block result events, and get accumulated into reward pool afterward.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("spend_utxo")]),t._v("/"),e("code",[t._v("create_utxo")])]),t._v(" "),e("p",[t._v("Modify UTxO storage")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("sealed_log")])]),t._v(" "),e("p",[t._v("Write into storage")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("deposit")]),t._v("/"),e("code",[t._v("withdraw")])]),t._v(" "),e("p",[t._v("Modify staking state and related states")])])]),t._v(" "),e("h2",{attrs:{id:"public-transactions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#public-transactions"}},[t._v("#")]),t._v(" Public transactions")]),t._v(" "),e("p",[t._v("Common validations:")]),t._v(" "),e("ul",[e("li",[t._v("Check tx attributes ("),e("code",[t._v("chain_hex_id")]),t._v(", "),e("code",[t._v("app_version")]),t._v(")")]),t._v(" "),e("li",[t._v("Verify staking witness")]),t._v(" "),e("li",[t._v("Check the witness match the staking address")]),t._v(" "),e("li",[t._v("Check "),e("code",[t._v("nonce")]),t._v(" matches")])]),t._v(" "),e("h3",{attrs:{id:"unbond"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#unbond"}},[t._v("#")]),t._v(" Unbond")]),t._v(" "),e("p",[t._v("The actual paid fee is "),e("code",[t._v("context.min_fee_computed")]),t._v(".")]),t._v(" "),e("p",[t._v("Actions:")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("staking.bonded -= tx.value")])]),t._v(" "),e("li",[e("code",[t._v("staking.unbonded += tx.value - context.min_fee_computed")])]),t._v(" "),e("li",[e("code",[t._v("staking.unbonded_from = block_time + unbonding_period")])])]),t._v(" "),e("p",[t._v("Validations:")]),t._v(" "),e("ul",[e("li",[t._v("Not jailed")]),t._v(" "),e("li",[t._v("Coin computations no error, which implies:\n"),e("ul",[e("li",[e("code",[t._v("tx.value >= context.min_fee_computed")])]),t._v(" "),e("li",[e("code",[t._v("staking.bonded >= tx.value")])])])])]),t._v(" "),e("h3",{attrs:{id:"unjail"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#unjail"}},[t._v("#")]),t._v(" Unjail")]),t._v(" "),e("p",[t._v("The actual paid fee is zero.")]),t._v(" "),e("p",[t._v("Action:")]),t._v(" "),e("ul",[e("li",[t._v('Transit staking state from "jailed validator" to "inactive(unjailed) validator" (refer to '),e("RouterLink",{attrs:{to:"/modules/staking-state.html#unjail"}},[t._v("staking\nstate")]),t._v(").")],1)]),t._v(" "),e("p",[t._v("Validations:")]),t._v(" "),e("ul",[e("li",[t._v("Already jailed")]),t._v(" "),e("li",[e("code",[t._v("block_time >= jailed_until")])])]),t._v(" "),e("h3",{attrs:{id:"node-join"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#node-join"}},[t._v("#")]),t._v(" Node Join")]),t._v(" "),e("p",[t._v("The actual paid fee is zero.")]),t._v(" "),e("p",[t._v("Action")]),t._v(" "),e("ul",[e("li",[t._v('Transit staking state from "clean staking" or "inactive(unjailed) validator" to active validator (refer to  '),e("RouterLink",{attrs:{to:"/modules/staking-state.html#node-join"}},[t._v("staking\nstate")]),t._v(")")],1)]),t._v(" "),e("p",[t._v("Validations:")]),t._v(" "),e("ul",[e("li",[t._v("Not jailed")]),t._v(" "),e("li",[t._v("Not active")]),t._v(" "),e("li",[e("code",[t._v("staking.bonded >= minimal_required_staking")])]),t._v(" "),e("li",[t._v("Validator address not used")]),t._v(" "),e("li",[t._v("Validator address not banned")]),t._v(" "),e("li",[t._v("Used validator address list not full when re-join with new validator key.")])]),t._v(" "),e("h2",{attrs:{id:"appendix"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#appendix"}},[t._v("#")]),t._v(" Appendix")]),t._v(" "),e("h3",{attrs:{id:"tx-storage"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tx-storage"}},[t._v("#")]),t._v(" Tx Storage")]),t._v(" "),e("h4",{attrs:{id:"kv-store"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kv-store"}},[t._v("#")]),t._v(" KV Store")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("COL_TX_META")]),t._v(", "),e("code",[t._v("txid -> BitVec")]),t._v("\nUTxO spent status.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("COL_ENCLAVE_TX")]),t._v(", "),e("code",[t._v("txid -> sealed tx payload")])]),t._v(" "),e("ul",[e("li",[t._v("abci query sealed payload for tx inputs, pass them to tx-validation-enclave for it to validate the tx.")]),t._v(" "),e("li",[t._v("For tx-query to query sealed tx payload.")])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("COL_WITNESS")]),t._v(", "),e("code",[t._v("txid -> TxWitness")]),t._v("\nOnly for abci-query")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("COL_BODIES")]),t._v(", "),e("code",[t._v("txid -> Tx")]),t._v("\nOnly for abci-query")])])]),t._v(" "),e("h4",{attrs:{id:"merkle-trie"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#merkle-trie"}},[t._v("#")]),t._v(" Merkle Trie")]),t._v(" "),e("p",[t._v("Staking states are stored in merkle trie.")])])}),[],!1,null,null,null);a.default=n.exports}}]);