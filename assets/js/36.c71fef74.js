(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{399:function(t,a,e){"use strict";e.r(a);var s=e(42),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"clientcli"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#clientcli"}},[t._v("#")]),t._v(" ClientCLI")]),t._v(" "),e("p",[t._v("ClientCLI is a command line interface for the wallet client. It supports wallet management, funds transfer and basic staking operations.")]),t._v(" "),e("h2",{attrs:{id:"build-and-configurations"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#build-and-configurations"}},[t._v("#")]),t._v(" Build and configurations")]),t._v(" "),e("h3",{attrs:{id:"build-prerequisites"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#build-prerequisites"}},[t._v("#")]),t._v(" Build Prerequisites")]),t._v(" "),e("ul",[e("li",[t._v("Crypto.com Chain: "),e("a",{attrs:{href:"https://github.com/crypto-com/chain",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/crypto-com/chain"),e("OutboundLink")],1)])]),t._v(" "),e("h3",{attrs:{id:"build-instructions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#build-instructions"}},[t._v("#")]),t._v(" Build instructions")]),t._v(" "),e("p",[t._v("ClientCLI is bundled with the Crypto.com chain code. After you have "),e("a",{attrs:{href:"https://crypto-com.github.io/getting-started/#compile-chain",target:"_blank",rel:"noopener noreferrer"}},[t._v("compile the binaries"),e("OutboundLink")],1),t._v(", it is available under "),e("code",[t._v("./bin/client-cli")]),t._v(".")]),t._v(" "),e("h3",{attrs:{id:"how-to-use"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#how-to-use"}},[t._v("#")]),t._v(" How to use")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ ./bin/client-cli "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("command"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("argument"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),e("p",[t._v("There is also a help command available at")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ ./bin/client-cli --help\n")])])]),e("h3",{attrs:{id:"wallet-storage"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#wallet-storage"}},[t._v("#")]),t._v(" Wallet Storage")]),t._v(" "),e("p",[t._v("By default, your wallets are stored in the folder "),e("code",[t._v("./storage")]),t._v(" located at the same path of where "),e("code",[t._v("./client-cli")]),t._v(" is executed.")]),t._v(" "),e("p",[t._v("Make sure you have backed up your wallet storage after creating the wallet or else your funds may be inaccessible in case of accident forever.")]),t._v(" "),e("h4",{attrs:{id:"configure-wallet-storage-location"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#configure-wallet-storage-location"}},[t._v("#")]),t._v(" Configure Wallet Storage Location")]),t._v(" "),e("p",[t._v("To customize the wallet storage location when running ClientCLI, you can update the environment variable "),e("code",[t._v("CRYPTO_CLIENT_STORAGE")]),t._v(" with the path:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CRYPTO_CLIENT_STORAGE")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/my-wallet-storage ./bin/client-cli "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n")])])]),e("h3",{attrs:{id:"chain-id"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#chain-id"}},[t._v("#")]),t._v(" Chain ID")]),t._v(" "),e("p",[t._v("Crypto.com Chain has different "),e("a",{attrs:{href:"../getting-started/chain-id-and-network-id#chain-id"}},[t._v("Chain ID")]),t._v(" to distinguish between "),e("em",[t._v("devnet")]),t._v(", "),e("em",[t._v("testnet")]),t._v(" and "),e("em",[t._v("mainnet")]),t._v(". Accordingly, you should set up your ClientCLI and use the correct configuration for the node you are connecting to.")]),t._v(" "),e("h4",{attrs:{id:"configure-chain-id"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#configure-chain-id"}},[t._v("#")]),t._v(" Configure Chain ID")]),t._v(" "),e("p",[t._v("To customize the Chain ID while running ClientCLI, you can update the environment variable "),e("code",[t._v("CRYPTO_CHAIN_ID")]),t._v(" with the full chain ID. For example, we can change it to the testnet with Chain ID "),e("code",[t._v("testnet-thaler-crypto-com-chain-42")]),t._v(" by:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CRYPTO_CHAIN_ID")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("testnet-thaler-crypto-com-chain-42 ./bin/client-cli "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n")])])]),e("h3",{attrs:{id:"configure-tendermint-url"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#configure-tendermint-url"}},[t._v("#")]),t._v(" Configure Tendermint URL")]),t._v(" "),e("p",[t._v("Similarly, we can also change the Tendermint URL when running ClientCLI, update environment variable "),e("code",[t._v("CRYPTO_CLIENT_TENDERMINT")]),t._v(" with the Tendermint URL.")]),t._v(" "),e("h3",{attrs:{id:"options"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options"}},[t._v("#")]),t._v(" Options")]),t._v(" "),e("p",[t._v("A list of supported environment variables of ClientCLI is listed below:")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Option")]),t._v(" "),e("th",[t._v("Description")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Default Value")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("CRYPTO_CLIENT_DEBUG")]),t._v(" "),e("td",[t._v("How detail should the debug message be on error")]),t._v(" "),e("td",[t._v("Boolean")]),t._v(" "),e("td",[t._v("false")])]),t._v(" "),e("tr",[e("td",[t._v("CRYPTO_CHAIN_ID")]),t._v(" "),e("td",[t._v("Full "),e("RouterLink",{attrs:{to:"/getting-started/chain-id-and-network-id.html#chain-id"}},[t._v("Chain ID")])],1),t._v(" "),e("td",[t._v("String")]),t._v(" "),e("td",[t._v("---")])]),t._v(" "),e("tr",[e("td",[t._v("CRYPTO_CLIENT_STORAGE")]),t._v(" "),e("td",[t._v("Wallet storage directory")]),t._v(" "),e("td",[t._v("Storage directory")]),t._v(" "),e("td",[t._v(".storage")])]),t._v(" "),e("tr",[e("td",[t._v("CRYPTO_CLIENT_TENDERMINT")]),t._v(" "),e("td",[t._v("Websocket endpoint for tendermint")]),t._v(" "),e("td",[t._v("String")]),t._v(" "),e("td",[t._v("ws://localhost:26657/websocket")])]),t._v(" "),e("tr",[e("td",[t._v("CRYPTO_GENESIS_FINGERPRINT")]),t._v(" "),e("td",[e("RouterLink",{attrs:{to:"/getting-started/genesis.html#genesis-fingerprint"}},[t._v("The genesis fingerprint")])],1),t._v(" "),e("td",[t._v("String")]),t._v(" "),e("td",[t._v("---")])])])]),t._v(" "),e("h2",{attrs:{id:"wallet-operations"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#wallet-operations"}},[t._v("#")]),t._v(" Wallet operations")]),t._v(" "),e("p",[t._v("First of all, you will need a wallet to store and spend your CRO.")]),t._v(" "),e("h3",{attrs:{id:"wallet-new-create-a-new-wallet"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#wallet-new-create-a-new-wallet"}},[t._v("#")]),t._v(" "),e("code",[t._v("wallet new")]),t._v(" - Create a new wallet")]),t._v(" "),e("p",[t._v("Currently, "),e("code",[t._v("client-cli")]),t._v(" supports two types of wallets: The "),e("em",[t._v("basic wallet")]),t._v(" and the "),e("em",[t._v("HD ("),e("a",{attrs:{href:"https://en.bitcoin.it/wiki/Deterministic_wallet",target:"_blank",rel:"noopener noreferrer"}},[t._v("Hierarchical Deterministic"),e("OutboundLink")],1),t._v(") wallet")]),t._v(".")]),t._v(" "),e("p",[t._v("::: warning Important note:\nFor safety reasons, it is "),e("strong",[t._v("strongly suggested")]),t._v(" that users should create their wallet in the form of an HD wallet to prevent loss or damage of the device.\n:::")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Basic wallet")]),t._v(" ["),e("code",[t._v("--type basic")]),t._v("]")])]),t._v(" "),e("p",[t._v('You can create a new basic wallet with the name "Default" as in the following example:\n::: details Example: Create a basic wallet')]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ ./bin/client-cli wallet new --name Default --type basic\nEnter passphrase:"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Enter passphrase for your wallet ##")]),t._v("\nConfirm passphrase:"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Confirm passphrase for your wallet ##")]),t._v("\nAuthentication token: 42a4c4003bfc3accbc2c0e4aff526edbb535f5b8d0c19f27fa52551d3ed52c08\n")])])]),e("p",[t._v(":::")]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[t._v("HD wallet")]),t._v(" ["),e("code",[t._v("--type hd")]),t._v("]")]),t._v(" "),e("p",[t._v('The HD wallet comes with a "seed phrase", which is serialized into a human-readable 24-word mnemonic. User can '),e("a",{attrs:{href:"#wallet-restore-restore-an-hd-wallet"}},[t._v("restore")]),t._v(" their wallet and associated addresses with the seed phrase.\n::: details Example: Create a HD wallet")]),t._v(" "),e("p",[t._v('You can create a new HD wallet with the name "Default_HD" by running')]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ ./bin/client-cli wallet new --name Default_HD --type hd\nEnter passphrase:"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Enter passphrase for your wallet ##")]),t._v("\nConfirm passphrase:"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Confirm passphrase for your wallet ##")]),t._v("\nPlease store following mnemonic safely to restore your wallet later:\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Your 24-word mnemonic will be shown here ##")]),t._v("\nAuthentication token: a6cdb10fee25097775354162f379b4fbb6089b2a1c02d4b978e70821a962c185\n")])])]),e("p",[t._v(":::")])])]),t._v(" "),e("p",[t._v(":::danger\nIt is important that you keep the passphrase (and mnemonic for HD wallet) secure, as there is "),e("strong",[t._v("no way")]),t._v(" to recover it. You would not be able to access the funds in the wallet if you forget the passphrase.\n:::")]),t._v(" "),e("h3",{attrs:{id:"wallet-restore-restore-an-hd-wallet"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#wallet-restore-restore-an-hd-wallet"}},[t._v("#")]),t._v(" "),e("code",[t._v("wallet restore")]),t._v(" - Restore an HD wallet")]),t._v(" "),e("p",[t._v("You can restore an HD wallet with the mnemonic.")]),t._v(" "),e("p",[t._v("::: details Example: Restore an HD wallet")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ ./bin/client-cli wallet restore --name  Default_HD\nEnter passphrase:"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Enter passphrase for your wallet ##")]),t._v("\nConfirm passphrase:"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Confirm passphrase for your wallet ##")]),t._v("\nEnter mnemonic:\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Enter your 24-word mnemonic here ##")]),t._v("\nConfirm mnemonic:\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Confirm your 24-word mnemonic here ##")]),t._v("\nAuthentication token: a6cdb10fee25097775354162f379b4fbb6089b2a1c02d4b978e70821a962c185\n")])])]),e("p",[t._v(":::")]),t._v(" "),e("h3",{attrs:{id:"wallet-list-list-your-wallets"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#wallet-list-list-your-wallets"}},[t._v("#")]),t._v(" "),e("code",[t._v("wallet list")]),t._v(" - List your wallets")]),t._v(" "),e("p",[t._v("Multiple wallets can be created when needed. You can list all wallets saved under the storage path.")]),t._v(" "),e("p",[t._v("::: details Example: List all of your wallets")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ ./bin/client-cli wallet list\nWallet name: Default\n")])])]),e("p",[t._v(":::")]),t._v(" "),e("h3",{attrs:{id:"wallet-delete-delete-a-wallet"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#wallet-delete-delete-a-wallet"}},[t._v("#")]),t._v(" "),e("code",[t._v("wallet delete")]),t._v(" - Delete a wallet")]),t._v(" "),e("p",[t._v("You can delete a wallet in your storage path.")]),t._v(" "),e("p",[t._v(":::danger\nMake sure you have backed up the wallet mnemonic before removing any of your wallets, as there will be no way to recover your wallet without the mnemonic.\n:::")]),t._v(" "),e("p",[t._v("::: details Example: Remove a wallet")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$./bin/client-cli wallet delete\n")])])]),e("p",[t._v(":::")]),t._v(" "),e("h3",{attrs:{id:"wallet-auth-token-show-the-authentication-token"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#wallet-auth-token-show-the-authentication-token"}},[t._v("#")]),t._v(" "),e("code",[t._v("wallet auth-token")]),t._v(" - Show the authentication token")]),t._v(" "),e("p",[t._v("All authorised commands required the authentication token of the wallet, it can be shown by using the "),e("code",[t._v("auth-token")]),t._v(" subcommand:")]),t._v(" "),e("p",[t._v("::: details Example: Show authentication token of your wallet")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ ./bin/client-cli wallet auth-token --name Default_HD\nEnter passphrase:"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Enter passphrase of your wallet ##")]),t._v("\nAuthentication token: a6cdb10fee25097775354162f379b4fbb6089b2a1c02d4b978e70821a962c185\n")])])]),e("p",[t._v(":::")]),t._v(" "),e("h3",{attrs:{id:"wallet-export-export-your-wallet-to-a-file"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#wallet-export-export-your-wallet-to-a-file"}},[t._v("#")]),t._v(" "),e("code",[t._v("wallet export")]),t._v(" - Export your wallet to a file")]),t._v(" "),e("p",[t._v("You can export and backup your wallet(s) by using the "),e("code",[t._v("export")]),t._v(" subcommand:")]),t._v(" "),e("p",[t._v("::: details Example: Export your wallet(s)\nExporting the wallet "),e("em",[t._v("Default_HD")]),t._v(" to the new file "),e("em",[t._v('"backup"')]),t._v(" :")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ ./bin/client-cli wallet "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" --name Default_HD --to_file backup\nEnter authentication token "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" Default_HD: "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Insert your authentication token ##")]),t._v("\nGet all "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" wallets info.\nExport "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" wallet to "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"backup"')]),t._v(" success\n")])])]),e("p",[t._v("Note: Multiple wallets can be exported at the same time. Simply separate the wallet names with commas.")]),t._v(" "),e("p",[t._v(":::")]),t._v(" "),e("h3",{attrs:{id:"wallet-import-import-your-wallet-from-a-file"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#wallet-import-import-your-wallet-from-a-file"}},[t._v("#")]),t._v(" "),e("code",[t._v("wallet import")]),t._v(" - Import your wallet from a file")]),t._v(" "),e("p",[t._v("You can export and backup your wallet(s) by using the "),e("code",[t._v("import")]),t._v(" subcommand:")]),t._v(" "),e("p",[t._v("::: details Example: Import wallet\nImporting the wallet "),e("em",[t._v('"Default_HD"')]),t._v(" from the file "),e("em",[t._v('"backup"')]),t._v(" :")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ ./bin/client-cli wallet "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("import")]),t._v(" --file ./backup\nInput passphrase "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" wallet Default_HD\nAuthentication token of wallet pocket:\n")])])]),e("p",[t._v(":::")]),t._v(" "),e("h2",{attrs:{id:"address-operations"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#address-operations"}},[t._v("#")]),t._v(" Address operations")]),t._v(" "),e("p",[t._v("Once we have a wallet, we are now ready to create new addresses for receiving/staking funds. The most common address types in Crypto.com Chain are")]),t._v(" "),e("ol",[e("li",[e("strong",[t._v("Transfer address")]),t._v(": For normal token transfer;")]),t._v(" "),e("li",[e("strong",[t._v("Staking address")]),t._v(": For staking related operations.")])]),t._v(" "),e("h3",{attrs:{id:"address-new-create-a-new-address"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#address-new-create-a-new-address"}},[t._v("#")]),t._v(" "),e("code",[t._v("address new")]),t._v(" - Create a new address")]),t._v(" "),e("p",[t._v("Addresses can be created by using the "),e("code",[t._v("address new")]),t._v(" command:")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Create a "),e("em",[t._v("Transfer")]),t._v(" address ["),e("code",[t._v("--type Transfer")]),t._v("]")]),t._v(" "),e("p",[t._v("::: details Example: Create a Transfer type address")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ ./bin/client-cli address new --name Default --type Transfer\nEnter authentication token: "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Insert your authentication token ##")]),t._v("\nNew address: dcro1da35hvgcz6p977tud3xhuskup5jkkl8shn84rwffgjcsnffpz64qd73e0k\n")])])]),e("p",[t._v(":::")])]),t._v(" "),e("li",[e("p",[t._v("Create a "),e("em",[t._v("Staking")]),t._v(" address ["),e("code",[t._v("--type Staking")]),t._v("]")]),t._v(" "),e("p",[t._v("::: details Example: Create a Staking type address")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ ./bin/client-cli address new --name Default --type Staking\nEnter authentication token:\nNew address: 0x377c85a79d843753da78ff970a388cbc6a49c620\n")])])]),e("p",[t._v(":::")])])]),t._v(" "),e("h3",{attrs:{id:"address-list-list-your-addresses"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#address-list-list-your-addresses"}},[t._v("#")]),t._v(" "),e("code",[t._v("address list")]),t._v("- List your addresses")]),t._v(" "),e("p",[t._v("You can list all of your addresses with specified type under a wallet.")]),t._v(" "),e("p",[t._v("::: details Example: List your addresses")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("List your Transfer type address:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ ./bin/client-cli address list --name Default --type Transfer\nEnter authentication token: "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Insert your authentication token ##")]),t._v("\ndcro1da35hvgcz6p977tud3xhuskup5jkkl8shn84rwffgjcsnffpz64qd73e0k\n")])])])]),t._v(" "),e("li",[e("p",[t._v("List your Staking type address:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ ./bin/client-cli address list --name Default --type Staking\nEnter authentication token: "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Insert your authentication token ##")]),t._v("\n0x377c85a79d843753da78ff970a388cbc6a49c620\n")])])])]),t._v(" "),e("li",[e("p",[t._v("If there are no address under the wallet:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ .bin//client-cli address list --name Default -t Transfer\nEnter authentication token: "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Insert your authentication token ##")]),t._v("\nNo addresses found"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n")])])])])]),t._v(" "),e("p",[t._v(":::")]),t._v(" "),e("h3",{attrs:{id:"sync-sync-your-wallet"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sync-sync-your-wallet"}},[t._v("#")]),t._v(" "),e("code",[t._v("sync")]),t._v(" - Sync your wallet")]),t._v(" "),e("p",[t._v("It is important to keep your wallet sync with the blockchain before doing any wallet operation. This can be easily done by the "),e("code",[t._v("sync")]),t._v(" command.")]),t._v(" "),e("p",[t._v(":::details Example: Sync your wallet")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$  ./bin/client-cli "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sync")]),t._v("  --name Default\nEnter authentication token: "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Insert your authentication token ##")]),t._v("\nSynchronizing: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2168")]),t._v(" / "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2168")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100.00")]),t._v(" % "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.29")]),t._v("/s\nSynchronization complete"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n")])])]),e("p",[t._v(":::")]),t._v(" "),e("h3",{attrs:{id:"view-key-obtain-the-view-key"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#view-key-obtain-the-view-key"}},[t._v("#")]),t._v(" "),e("code",[t._v("view-key")]),t._v("- Obtain the View Key")]),t._v(" "),e("p",[t._v("In Crypto.com Chain, transactions are encrypted, and it can only be viewed by the owner of the view key. This functionality provides us with an extra layer of privacy and accountability.")]),t._v(" "),e("p",[t._v("It is important that in order for the receiver to spend the funds, they would need to be able to view the transaction details and obtain the corresponding UTXO data.\nTherefore, the receiver's view key is one of the essential components when launching a transaction.")]),t._v(" "),e("p",[t._v("::: details Example: Obtain the View Key\nThe view key can be obtained by running:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ ./bin/client-cli view-key  --name Default\nEnter authentication token: "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Insert your authentication token ##")]),t._v("\nView Key: 0253be0b7af1cddc7a80207ef1a0b647f5649670415a8417424f23210569c28173\n")])])]),e("p",[t._v(":::")]),t._v(" "),e("h2",{attrs:{id:"transaction-operations"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#transaction-operations"}},[t._v("#")]),t._v(" Transaction operations")]),t._v(" "),e("p",[t._v("Transactions can be created using the "),e("code",[t._v("transaction new")]),t._v(" command. In this section, we break it down into "),e("a",{attrs:{href:"#transfer-operations"}},[t._v("Transfer")]),t._v(" and "),e("a",{attrs:{href:"#staking-operations"}},[t._v("Staking")]),t._v(" operations for different transaction types.")]),t._v(" "),e("h3",{attrs:{id:"transfer-operations"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#transfer-operations"}},[t._v("#")]),t._v(" Transfer operations")]),t._v(" "),e("p",[t._v("Transfer operation involves the transfer of tokens between two "),e("em",[t._v("transfer")]),t._v(" addresses.")]),t._v(" "),e("h4",{attrs:{id:"transfer-prerequisites"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#transfer-prerequisites"}},[t._v("#")]),t._v(" Transfer prerequisites")]),t._v(" "),e("p",[t._v("As mentioned "),e("a",{attrs:{href:"#view-key-obtain-the-view-key"}},[t._v("earlier")]),t._v(", to send funds to another address, we will have to obtain the receiver's "),e("strong",[t._v("transfer address")]),t._v(" and their "),e("strong",[t._v("view key")]),t._v(" in the first place. More than one view keys can be inserted into a transaction.")]),t._v(" "),e("h4",{attrs:{id:"send-funds-type-transfer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#send-funds-type-transfer"}},[t._v("#")]),t._v(" Send Funds ["),e("code",[t._v("--type Transfer")]),t._v("]")]),t._v(" "),e("p",[t._v(":::details Example: Send funds from a transfer address to another.")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ ./bin/client-cli transaction new --name Default --type Transfer\nEnter authentication token: "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Insert your authentication token ##")]),t._v("\nEnter output address: "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Insert the output address ##")]),t._v("\nEnter amount "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("in CRO"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Insert the transfer amount ##")]),t._v("\nEnter timelock "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("seconds from UNIX epoch"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("leave blank "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" output is not "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("time")]),t._v(" locked"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(":\nMore outputs? "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("yN"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" N\nEnter view keys "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("comma separated"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("leave blank "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" you don't want any additional view keys "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" transaction"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Insert the view-key ##")]),t._v("\n")])])]),e("p",[t._v(":::")]),t._v(" "),e("h4",{attrs:{id:"receive-funds"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#receive-funds"}},[t._v("#")]),t._v(" Receive funds")]),t._v(" "),e("p",[t._v("On the other hand, similarly, to receive funds, you will need to present your "),e("strong",[t._v("address")]),t._v(" and "),e("strong",[t._v("view key")]),t._v(" to the sender.")]),t._v(" "),e("h3",{attrs:{id:"staking-operations"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#staking-operations"}},[t._v("#")]),t._v(" Staking operations")]),t._v(" "),e("p",[t._v("Staking operations involve the interaction between "),e("em",[t._v("transfer")]),t._v(" address and "),e("em",[t._v("staking")]),t._v(" address. It allows you to lock/unlocking funds for staking purposes.")]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[t._v("Bond you funds")]),t._v(" ["),e("code",[t._v("--type Deposit")]),t._v("]")]),t._v(" "),e("p",[t._v("To bond funds for staking, you can deposit funds (an unspent transaction) to a "),e("em",[t._v("staking")]),t._v(" address by the "),e("code",[t._v("Deposit")]),t._v(" operation.")]),t._v(" "),e("p",[t._v("::: details Example: Bond funds from a transfer address to a staking address")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ ./bin/client-cli transaction new --name Default --type Deposit\nEnter authentication token: "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Insert your authentication token ##")]),t._v("\nEnter staking address: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("60000000")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Insert receiver's staking address ##")]),t._v("\nEnter amount "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("in CRO"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("60000000.00000000")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Insert the deposit amount ##")]),t._v("\nIs the amount ********* CRO? "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Y"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("N"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(":Y "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Verify the deposit amount ##")]),t._v("\ncreate a transfer transaction to "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" a UTXO with "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("60000000.00000299")]),t._v(" amount"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fee is "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.00000299")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nbroadcast transfer transaction\ncreate deposit transaction\ndeposit success, transaction "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),t._v(" is: ***********\nTransaction successfully created"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n")])])]),e("ul",[e("li",[t._v("Remarks: In the above example, If you would like to deposit "),e("em",[t._v("60000000")]),t._v(" CRO, there will be a "),e("code",[t._v("Transfer")]),t._v(" type transaction of "),e("em",[t._v("60000000")]),t._v(" CRO + "),e("em",[t._v("fees")]),t._v(" to yourself at the beginning. Afterwards, we spend this newly obtained unspent transaction output of "),e("em",[t._v("60000000")]),t._v(" CRO for the "),e("code",[t._v("Deposit")]),t._v(" transaction.\n:::")])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("Unlock your bonded funds")]),t._v(" ["),e("code",[t._v("--type Unbond")]),t._v("]\nOn the other hand, we can create a "),e("code",[t._v("Unbond")]),t._v(" transaction to unbond staked funds")]),t._v(" "),e("p",[t._v("::: details Example: Unbond funds from a staking address")]),t._v(" "),e("div",{staticClass:"language-bash ./bin/client-cli transaction new --type unbond --name Default extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("Enter authentication token: "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Insert your authentication token ##")]),t._v("\nEnter staking address: "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Insert the target staking address ##")]),t._v("\nEnter amount "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("in CRO"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Insert the unbonding amount ##")]),t._v("\nTransaction successfully created"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n")])])]),e("p",[t._v(":::")]),t._v(" "),e("p",[t._v("::: tip")]),t._v(" "),e("ul",[e("li",[t._v("The unbonded amount will go to the "),e("code",[t._v("Unbonded")]),t._v(" balance in your staking address. It will be locked until the "),e("code",[t._v("unbonding_period")]),t._v(" has passed. Details about the deposited funds in the staking address can be found by checking its "),e("a",{attrs:{href:"#state-check-the-staking-state"}},[t._v("staking state")]),t._v(".")])]),t._v(" "),e("p",[t._v(":::")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("Withdraw your unbonded funds")]),t._v(" ["),e("code",[t._v("--type Withdraw")]),t._v("]")]),t._v(" "),e("p",[t._v("Once the "),e("code",[t._v("unbonding_period")]),t._v(" has passed, we can create a "),e("code",[t._v("Withdraw")]),t._v(" transaction to withdraw the staked funds (view-key required)\n::: details Example: Withdraw funds from a staking address")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ ./bin/client-cli transaction new --name Default --type Withdraw\n  Enter authentication token: "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Insert your authentication token ##")]),t._v("\n  Enter staking address: "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Insert your staking address ##")]),t._v("\n  Enter transfer address: "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Insert the target transfer address ##")]),t._v("\n  Enter view keys "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("comma separated"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("leave blank "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" you don't want any additional view keys "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" transaction"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(":\n  Transaction successfully created"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n")])])]),e("p",[t._v(":::")])])]),t._v(" "),e("p",[t._v("Please also refer to this "),e("RouterLink",{attrs:{to:"/getting-started/send_your_first_transaction.html#send-your-first-transaction"}},[t._v("diagram")]),t._v(" for interaction between "),e("em",[t._v("staking address")]),t._v(" and "),e("em",[t._v("transfer address")])],1),t._v(" "),e("h3",{attrs:{id:"transaction-show-show-transaction-details"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#transaction-show-show-transaction-details"}},[t._v("#")]),t._v(" "),e("code",[t._v("transaction show")]),t._v(" Show transaction details")]),t._v(" "),e("p",[t._v("You can show the detailed transaction metadata, inputs and outputs from a given transaction id:\n::: details Example: Show transaction details")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ ./bin/client-cli transaction show  --id "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("transaction id"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --name "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("wallet name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  Enter authentication token: "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Insert your authentication token ##")]),t._v("\n  Transaction metadata:\n  +----------------+--------+--------+-----+------------------+--------------+------------+\n  "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Transaction ID "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" In/Out "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Amount "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Fee "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Transaction Type "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Block Height "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Block Time "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n  +----------------+--------+--------+-----+------------------+--------------+------------+\n  "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n  +----------------+--------+--------+-----+------------------+--------------+------------+\n  Transaction inputs:\n  +---------------+-------+\n  "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Transaction ID"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Index "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n  +---------------+-------+\n  "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n  +---------------+-------+\n  Transaction outputs:\n  +---------+-------+-------------------+---------------+\n  "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Address "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Value "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Time-locked "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("until")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Spent/Unspent "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n  +---------+-------+-------------------+---------------+\n  "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n  +---------+-------+-------------------+---------------+\n\n")])])]),e("p",[t._v(":::")]),t._v(" "),e("h2",{attrs:{id:"balance-transaction-history"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#balance-transaction-history"}},[t._v("#")]),t._v(" Balance & transaction history")]),t._v(" "),e("h3",{attrs:{id:"balance-check-your-transferable-balance"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#balance-check-your-transferable-balance"}},[t._v("#")]),t._v(" "),e("code",[t._v("balance")]),t._v(" - Check your transferable balance")]),t._v(" "),e("p",[t._v("You can check your "),e("em",[t._v("transferable")]),t._v(" balance with the "),e("code",[t._v("balance")]),t._v(" command.\n:::details Example: Check your transferable balance")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ ./bin/client-cli balance --name Default\nEnter authentication token: "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Insert your authentication token ##")]),t._v("\n+-----------+---------------+\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Total     "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000.00000000")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+-----------+---------------+\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Pending   "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.00000000")]),t._v("    "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+-----------+---------------+\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Available "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000.00000000")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+-----------+---------------+\n")])])]),e("p",[t._v(":::")]),t._v(" "),e("p",[t._v(":::tip Note")]),t._v(" "),e("ul",[e("li",[t._v("Please note that "),e("code",[t._v("balance")]),t._v(" will only show your "),e("em",[t._v("transferable")]),t._v(" balance, for "),e("em",[t._v("staking")]),t._v(" related balance, please check it with the "),e("code",[t._v("state")]),t._v(" "),e("a",{attrs:{href:"#state-check-the-staking-state"}},[t._v("command")]),t._v(".")]),t._v(" "),e("li",[t._v("Once a transaction has been sent, the remaining amount ( "),e("em",[t._v("Total")]),t._v(' amount subtracted by the transaction amount and fees) will go to "'),e("em",[t._v("Pending")]),t._v('" status. The balance will be settled once the transaction has been confirmed. Therefore, It is suggested that you should '),e("code",[t._v("sync")]),t._v(" your wallet before checking the balance to obtain the latest balance.\n:::")])]),t._v(" "),e("h3",{attrs:{id:"history-check-your-transaction-history"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#history-check-your-transaction-history"}},[t._v("#")]),t._v(" "),e("code",[t._v("history")]),t._v(" - Check your transaction history")]),t._v(" "),e("p",[t._v("Besides checking the transferable balance of your wallet, you can view a more detailed transaction history.")]),t._v(" "),e("p",[t._v(":::details Example: Check your transaction history")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ ./bin/client-cli "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("history")]),t._v(" --name Default\nEnter authentication token: "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Insert your authentication token ##")]),t._v("\n+----------------+--------+--------+-----+--------------+------------+\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Transaction ID "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" In/Out "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Amount "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Fee "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Block Height "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Block Time "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+----------------+--------+--------+-----+--------------+------------+\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+----------------+--------+--------+-----+--------------+------------+\n")])])]),e("p",[t._v(":::")]),t._v(" "),e("p",[t._v("It provides you with details such as the "),e("strong",[t._v("Transaction ID")]),t._v(", "),e("strong",[t._v("Direction")]),t._v("(In/out), "),e("strong",[t._v("Amount")]),t._v(" and "),e("strong",[t._v("Fee")]),t._v(" of the transaction, the "),e("strong",[t._v("Block Height")]),t._v(" of where the transaction happened and its corresponding "),e("strong",[t._v("Block Time")]),t._v(".")]),t._v(" "),e("h3",{attrs:{id:"state-check-the-staking-state"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#state-check-the-staking-state"}},[t._v("#")]),t._v(" "),e("code",[t._v("state")]),t._v(" - Check the staking state")]),t._v(" "),e("p",[t._v("Crypto.com Chain uses a mixed "),e("RouterLink",{attrs:{to:"/getting-started/transaction-accounting-model.html#utxo-accounts-model"}},[t._v("UTXO+Accounts model")]),t._v(", besides checking "),e("em",[t._v("transferable")]),t._v(" balance of a "),e("em",[t._v("transfer")]),t._v(" type address, we can check the "),e("RouterLink",{attrs:{to:"/getting-started/transaction-accounting-model.html#staked-state"}},[t._v("state")]),t._v(" of a "),e("em",[t._v("staking")]),t._v(" type address.")],1),t._v(" "),e("p",[t._v("::: details Example: Check the state of a staking address")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ ./client-cli state --address "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("staking address"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  --name "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("wallet name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n+-----------------+----------------------------+\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Nonce           "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("                          "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+-----------------+----------------------------+\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Bonded          "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("          "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("50099999.99999671")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+-----------------+----------------------------+\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Unbonded        "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("                 "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.00000000")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+-----------------+----------------------------+\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Unbonded From   "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v("-02-01 "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v(":53:30 +08:00 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+-----------------+----------------------------+\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Jailed Until    "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("                 Not jailed "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+-----------------+----------------------------+\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Punishment Type "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("               Not punished "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+-----------------+----------------------------+\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Slash Amount    "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("               Not punished "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+-----------------+----------------------------+\n")])])]),e("p",[e("strong",[t._v("Note")]),t._v(": The error message "),e("code",[t._v("Error: Invalid input: staking not found")]),t._v(" will be displayed if there is no transaction associated with the staking address.\n:::")]),t._v(" "),e("h2",{attrs:{id:"advance-operations-and-transactions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#advance-operations-and-transactions"}},[t._v("#")]),t._v(" Advance operations and transactions")]),t._v(" "),e("h3",{attrs:{id:"node-join-joining-the-network-as-a-validator"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#node-join-joining-the-network-as-a-validator"}},[t._v("#")]),t._v(" "),e("code",[t._v("node-join")]),t._v(" - Joining the network as a validator")]),t._v(" "),e("p",[t._v("Anyone who wishes to become a validator can submit a "),e("code",[t._v("NodeJoinTx")]),t._v(" by")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ ./bin/client-cli transaction new --name Default --type node-join\n")])])]),e("p",[t._v("See "),e("RouterLink",{attrs:{to:"/getting-started/staking.html#joining-the-network"}},[t._v("here")]),t._v(" for the actual requirement of becoming a validator.")],1),t._v(" "),e("h3",{attrs:{id:"unjail-unjailing-a-validator"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#unjail-unjailing-a-validator"}},[t._v("#")]),t._v(" "),e("code",[t._v("unjail")]),t._v(" - Unjailing a validator")]),t._v(" "),e("p",[t._v("Validator could be "),e("RouterLink",{attrs:{to:"/getting-started/reward-and-punishments.html#validator-punishments"}},[t._v("punished")]),t._v(" and "),e("RouterLink",{attrs:{to:"/getting-started/reward-and-punishments.html#jailing"}},[t._v("jailed")]),t._v(" due to network misbehaviour. After the jailing period has passed, one can broadcast a "),e("code",[t._v("UnjailTx")]),t._v(" to unjail the validator and resume its normal operations by")],1),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ ./bin/client-cli transaction new --name Default --type unjail\n")])])]),e("h3",{attrs:{id:"export-import-export-import-transactions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#export-import-export-import-transactions"}},[t._v("#")]),t._v(" "),e("code",[t._v("export")]),t._v("/"),e("code",[t._v("import")]),t._v(" - Export & Import Transactions")]),t._v(" "),e("p",[t._v("As mentioned before, sender should add the receiver's view-key to the transaction. Because sender can't push data directly to the receiver. However, it is also possible to send / receive a payment by directly exchanging the (raw) transaction payload data. The sender (who creates the transaction) would export it, the receiver would import it and check the transaction data locally and check the transaction ID against the distributed ledger. Following explains the flow:")]),t._v(" "),e("ol",[e("li",[e("p",[e("strong",[t._v("Sender")]),t._v(": Get your transaction id from the history, you may need to sync before running the following command:\n::: details Example: Obtain the transaction id")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ ./bin/client-cli "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("history")]),t._v(" --limit ? --offset ? --name "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("sender_wallet"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nEnter authentication token: "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Insert your authentication token ##")]),t._v("\n+----------------+--------+--------+-----+--------------+------------+\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Transaction ID "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" In/Out "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Amount "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Fee "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Block Height "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Block Time "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+----------------+--------+--------+-----+--------------+------------+\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("transaction_id"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">|")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+----------------+--------+--------+-----+--------------+------------+\n\n")])])]),e("p",[t._v(":::")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("Sender")]),t._v(": Export the target transaction payload from the sender's wallet:\n::: details Example: Export the raw transaction data")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ ./bin/client-cli transaction "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" --id "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("transaction_id"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --name "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("sender_wallet"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nEnter authentication token: "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Insert your authentication token ##")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## transaction_payload_example ##")]),t._v("\n    eyJ0eCI6eyJ0eXBlIjoiVHJhbnNmZXJUcmFuc2FjdGlvbiIsImlucHV0cyI6W3siaWQiOiI3ZDk3NzVjNTcyODQ1ZjRlNzRjOGU5Y2Q1NjhkZjk4Mjk0NjQ1ODM1NDA5OGQzZDBlZjcxNzRmYmQ3NDdkMDhkIiwiaW5kZXgiOjF9XSwib3V0cHV0cyI6W3siYWRkcmVzcyI6InRjcm8xenR2MDZ6dzRtdHZ3NnhhZ25jMGdheTJkbXN5OHo5cjN4N2RwdGoycW5tdnBoNDY1YXQ5c251M2x1YSIsInZhbHVlIjoiMTAwMDAwMDAwMDAwIiwidmFsaWRfZnJvbSI6bnVsbH0seyJhZGRyZXNzIjoidGNybzFtODd5cTYwMmM2M2ZrY3p2ejZwcW5xY3JzOXZ0bnEzOHRuZjQ1a3lqMG1rdHY1ZGVkaDBxYTNmcHB2IiwidmFsdWUiOiI1OTk5ODk5OTk5OTk3ODg3IiwidmFsaWRfZnJvbSI6bnVsbH1dLCJhdHRyaWJ1dGVzIjp7ImNoYWluX2hleF9pZCI6IjQyIiwiYWxsb3dlZF92aWV3IjpbeyJ2aWV3X2tleSI6IjAzZDRkNWZiN2Q4MjJiZGUwZjYwOTgwNmU3ZTEzMDVmNTI3NjYzZmM5YWU2ZmZhMjJiNDVhMDc1NDRhOGU5OGY1YiIsImFjY2VzcyI6IkFsbERhdGEifV19fSwiYmxvY2tfaGVpZ2h0IjozMjQ2Mn0\n")])])]),e("p",[t._v(":::")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("Receiver")]),t._v(": The transaction can be imported into receiver's wallet by\n::: details Example: Import the raw transaction data")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ ./bin/client-cli transaction "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("import")]),t._v(" --tx "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("transaction_payload"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --name "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("receiver_wallet"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n    Enter authentication token: "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Insert your authentication token ##")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("import")]),t._v(" amount: "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("transaction_amount"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),e("p",[t._v(":::")])]),t._v(" "),e("li",[e("p",[t._v("Finally, receiver can verify this transaction by checking the "),e("a",{attrs:{href:"#history-check-your-transaction-history"}},[t._v("transaction history")])])])]),t._v(" "),e("h3",{attrs:{id:"multisig-multi-signature-operations"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#multisig-multi-signature-operations"}},[t._v("#")]),t._v(" "),e("code",[t._v("multisig")]),t._v(" - Multi-signature operations")]),t._v(" "),e("p",[t._v("Crypto.com Chain implemented the "),e("a",{attrs:{href:"https://blockstream.com/2019/02/18/en-musig-a-new-multisignature-standard/",target:"_blank",rel:"noopener noreferrer"}},[t._v("threshold Multisig"),e("OutboundLink")],1),t._v(" for multi-signature related features. Specifically, a threshold multi-signature addresses requires multiple keys to authorize a transaction.")]),t._v(" "),e("h4",{attrs:{id:"create-a-public-key-for-multi-signature-address"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#create-a-public-key-for-multi-signature-address"}},[t._v("#")]),t._v(" Create a public key for multi-signature address")]),t._v(" "),e("p",[t._v("To begin, we would need to create a new public key for the multi-signature address by the "),e("code",[t._v("new-address-public-key")]),t._v(" command:")]),t._v(" "),e("p",[t._v("::: details Example: Create a public key for multi-signature address")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("  $ ./bin/client-cli multisig new-address-public-key --name "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Wallet_name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Insert your authentication token ##")]),t._v("\n      Enter authentication token:\n  Public key: 02a71aef2e97bdbffbf526548cf475103a82853fce43403eef40a55d17715fa6a1\n")])])]),e("p",[t._v(":::")]),t._v(" "),e("h4",{attrs:{id:"generating-a-multi-signature-address"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#generating-a-multi-signature-address"}},[t._v("#")]),t._v(" Generating a multi-signature address")]),t._v(" "),e("p",[t._v("Now we are ready to create a "),e("em",[t._v("M-of-N")]),t._v(" multi-signature address by the "),e("code",[t._v("new-address")]),t._v(" command, where")]),t._v(" "),e("ul",[e("li",[e("em",[t._v("M")]),t._v(" is the minimum signatures required to spend the funds from the multi-signature address;")]),t._v(" "),e("li",[e("em",[t._v("N")]),t._v(" is the total number of keys involved;")]),t._v(" "),e("li",[e("em",[t._v("N")]),t._v(" has to be greater or equal to "),e("em",[t._v("M")]),t._v(".")])]),t._v(" "),e("p",[t._v("Some of the actual use cases of multi-signature are covered in these "),e("a",{attrs:{href:"https://en.bitcoin.it/wiki/Multisignature",target:"_blank",rel:"noopener noreferrer"}},[t._v("application examples"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("p",[t._v("::: details Example: Create a M-of-N multi-signature address")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("  $ ./bin/client-cli multisig new-address --name "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Wallet_name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Insert your authentication token ##")]),t._v("\n      Enter authentication token:\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Insert N different public keys for the multi-signature address ##")]),t._v("\n      Enter public keys"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("include self public key, separated by commas"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(":"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Public_Key_1, Public_Key_2, "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("., Public_Key_N"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Insert your own public key in the wallet ##")]),t._v("\n      input self public key: 02a71aef2e97bdbffbf526548cf475103a82853fce43403eef40a55d17715fa6a1\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Insert the number of signatures required to release the fund##")]),t._v("\n      how many signatures required: M\n")])])]),e("p",[t._v(":::")]),t._v(" "),e("h4",{attrs:{id:"list-your-public-keys"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#list-your-public-keys"}},[t._v("#")]),t._v(" List your public keys")]),t._v(" "),e("p",[t._v("We can list the public keys for multi-signature address by the "),e("code",[t._v("list-address-public-keys")]),t._v(" command:")]),t._v(" "),e("p",[t._v("::: details Example: List public keys for multi-signature address")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("  $ ./bin/client-cli multisig list-address-public-keys --name "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Wallet_name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Insert your authentication token ##")]),t._v("\n      Enter authentication token:\n  Public key: 02a71aef2e97bdbffbf526548cf475103a82853fce43403eef40a55d17715fa6a1\n")])])]),e("p",[t._v(":::")]),t._v(" "),e("h4",{attrs:{id:"list-your-multi-signature-addresses"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#list-your-multi-signature-addresses"}},[t._v("#")]),t._v(" List your multi-signature addresses:")]),t._v(" "),e("p",[t._v("Finally, multi-signature addresses will be kept in your wallet after it has been generated. We can list them by using the\n"),e("a",{attrs:{href:"#address-list-list-your-addresses"}},[t._v("address-list")]),t._v(" command as mentioned earlier.\n::: details Example: List multi-signature addresses")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("  $ ./bin/client-cli address list --name "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Wallet_name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Insert your authentication token ##")]),t._v("\n      Enter authentication token:\n  Address: tcro1pra4uuphf2cykgd542kzt53echtt4tu68wpet6zf400m8wccfhes4ssmk9\n  MultiSig Address: tcro1u7wuwrnfyqvc7gx77lxvl65dj3vczv3g8k7az7ls9rq7z87m4vlqkctkv4"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v(":::")])])}),[],!1,null,null,null);a.default=n.exports}}]);