(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{209:function(t,a,e){t.exports=e.p+"assets/img/states.3c5d49ad.png"},232:function(t,a,e){"use strict";e.r(a);var s=e(0),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"send-your-first-transaction"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#send-your-first-transaction"}},[t._v("#")]),t._v(" Send Your First Transaction")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("Caution")]),t._v(" "),s("p",[t._v("This page is a continuation of running a local chain node of "),s("RouterLink",{attrs:{to:"/getting-started/"}},[t._v("Getting Started")]),t._v(" for development.")],1),t._v(" "),s("p",[t._v("For anyone interested more on wallet management, getting testing token from the faucet and sending transaction,\nplease refer to "),s("a",{attrs:{href:"../wallets/client-cli"}},[t._v("ClientCLI")]),t._v(".")])]),t._v(" "),s("p",[t._v("Before sending the transaction, please notice that the genesis fund is "),s("strong",[t._v("bonded")]),t._v(" (or staked) at the beginning. You first have to "),s("strong",[t._v("withdraw")]),t._v(" it to UTXO:")]),t._v(" "),s("p",[s("img",{attrs:{src:e(209),alt:""}})]),t._v(" "),s("h2",{attrs:{id:"restore-the-default-wallet"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#restore-the-default-wallet"}},[t._v("#")]),t._v(" Restore the Default wallet")]),t._v(" "),s("p",[t._v("From the getting started section, we have already kicked off the Crypto.com Chain with the\nsimple make commands and docker. However, there are multiple "),s("a",{attrs:{href:"https://github.com/crypto-com/chain/tree/master/docker/config/devnet/tendermint",target:"_blank",rel:"noopener noreferrer"}},[t._v("tendermint configs"),s("OutboundLink")],1),t._v(" should be explained.")]),t._v(" "),s("ul",[s("li",[t._v("Restore the HD wallet and name it as "),s("code",[t._v("Default")]),t._v(":")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ ./target/debug/client-cli wallet restore --name Default\n\nEnter passphrase:       // Enter your passphrase here\nConfirm passphrase:     // Confirm your passphrase\nEnter mnemonic:         // Copy the mnemonic words here\nConfirm mnemonic:       // Confirm the mnemonic\n\nAuthentication token: b74ce4590ebc9d3c2a3adace926304384ae9451f43560c9702402be53811da8b\n")])])]),s("p",[t._v("Then you will get the "),s("code",[t._v("Authentication token")]),t._v(", keep the token safe and it will be needed for all authorised commands.")]),t._v(" "),s("h2",{attrs:{id:"create-transfer-staking-address"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#create-transfer-staking-address"}},[t._v("#")]),t._v(" Create Transfer & Staking Address")]),t._v(" "),s("ul",[s("li",[t._v("First, you should init the two "),s("code",[t._v("Staking")]),t._v(" type address with the "),s("code",[t._v("Default")]),t._v(" wallet you just restored:")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ ./target/debug/client-cli address new --name Default --type Staking\nEnter authentication token:       // Input the Authentication token\nNew address: 0x45c1851c2f0dc6138935857b9e23b173185fea15\n")])])]),s("ul",[s("li",[t._v("Run another time and you will get the address that stores the unbonded funds.")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ ./target/debug/client-cli address new --name Default --type Staking\nEnter authentication token:       // Input the Authentication token\nNew address: 0x2dfde2178daa679508828242119dcf2114038ea8\n")])])]),s("ul",[s("li",[t._v("Then, you should create a "),s("code",[t._v("Transfer")]),t._v(" type address to receive funds using "),s("code",[t._v("Default")]),t._v(" wallet:")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ ./target/debug/client-cli address new --name Default --type Transfer\nEnter authentication token:       // Input the Authentication token\nNew address: dcro1ayhu0665wprxf86letqlv8x4ssppeu6awf7m60qlwds9268vltwsk6ehwa\n")])])]),s("p",[t._v("To be clarified, the genesis fund is "),s("a",{attrs:{href:"https://github.com/crypto-com/chain/blob/master/docker/config/devnet/tendermint/genesis.json#L19",target:"_blank",rel:"noopener noreferrer"}},[t._v("stored"),s("OutboundLink")],1),t._v(" in a pre-created Hierarchical Deterministic(HD) Wallet "),s("a",{attrs:{href:"https://github.com/crypto-com/chain/blob/master/docker/config/devnet/tendermint/mnemonics.txt",target:"_blank",rel:"noopener noreferrer"}},[t._v("mnemonic here"),s("OutboundLink")],1),t._v(". So we should restore it before making transactions.")]),t._v(" "),s("ul",[s("li",[t._v("Therefore, you can check the bond status of the wallet by the following command:")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ /target/debug/client-cli state --address 0x2dfde2178daa679508828242119dcf2114038ea8\n\n+-----------------+----------------------------+\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Nonce           "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("                          "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+-----------------+----------------------------+\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Bonded          "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("                 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.00000000")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+-----------------+----------------------------+\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Unbonded        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000000000.00000000")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+-----------------+----------------------------+\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Unbonded From   "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2019")]),t._v("-11-20 08:56:48 +00:00 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+-----------------+----------------------------+\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Jailed Until    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("                 Not jailed "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+-----------------+----------------------------+\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Punishment Type "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("               Not punished "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+-----------------+----------------------------+\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Slash Amount    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("               Not punished "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+-----------------+----------------------------+\n")])])]),s("h2",{attrs:{id:"withdrawal-the-bonded-funds"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#withdrawal-the-bonded-funds"}},[t._v("#")]),t._v(" Withdrawal the bonded funds")]),t._v(" "),s("p",[s("strong",[t._v("Bonded address")]),t._v(": Previously "),s("a",{attrs:{href:"https://github.com/crypto-com/chain/blob/master/docker/config/devnet/tendermint/genesis.json#L19",target:"_blank",rel:"noopener noreferrer"}},[t._v("generated address"),s("OutboundLink")],1),t._v(" in your wallet to receive genesis funds")]),t._v(" "),s("p",[s("strong",[t._v("Transfer address")]),t._v(": Wallet Transfer address we just generated")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ ./target/debug/client-cli transaction new --name Default --type Withdraw\nEnter authentication token:       // Input the Authentication token\nEnter staking address: 0x2dfde2178daa679508828242119dcf2114038ea8\nEnter transfer address: dcro1ayhu0665wprxf86letqlv8x4ssppeu6awf7m60qlwds9268vltwsk6ehwa\nEnter view keys "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("comma separated"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("leave blank "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" you don't want any additional view keys "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" transaction"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(":\n// Leave blank because this tx is "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" same wallet\n")])])]),s("ul",[s("li",[t._v("Then, you can "),s("code",[t._v("sync")]),t._v(" and check "),s("code",[t._v("balance")]),t._v(" of your wallet:")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ ./target/debug/client-cli "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sync")]),t._v(" --name Default\nEnter authentication token:       // Input the Authentication token\nSynchronizing: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1951")]),t._v(" / "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1951")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100.00")]),t._v(" % "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("930.09")]),t._v("/s\nSynchronization complete"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n")])])]),s("ul",[s("li",[t._v("You can now check your "),s("code",[t._v("balance")]),t._v(". Noted that the "),s("code",[t._v("Avaiable")]),t._v(" only includes the transferable balance and the bonded/unbonded amount are not included:")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ ./target/debug/client-cli balance --name Default\nEnter authentication token:       // Input the Authentication token\n+-----------+---------------------+\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Total     "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000000000.00000000")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+-----------+---------------------+\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Pending   "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.00000000")]),t._v("          "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+-----------+---------------------+\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Available "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000000000.00000000")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+-----------+---------------------+\n")])])]),s("p",[t._v("Congratulations! You successfully withdraw all the unbonded genesis fund and now can transfer to others.")]),t._v(" "),s("h2",{attrs:{id:"transfer-cro-to-another-address"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#transfer-cro-to-another-address"}},[t._v("#")]),t._v(" Transfer CRO to another address")]),t._v(" "),s("ul",[s("li",[t._v("First you can creat another wallet with the name "),s("code",[t._v("Bob")]),t._v(", or whatever name you like. The wallet type could be "),s("code",[t._v("hd")]),t._v("(Hierarchical Deterministic) or "),s("code",[t._v("basic")]),t._v(":")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("./target/debug/client-cli wallet new --name bob --type hd\nEnter passphrase:\nConfirm passphrase:\nPlease store following mnemonic safely to restore your wallet later:\nMnemonic: cabin typical scheme rather hood sunny salon mansion hazard update video drill century athlete argue human discover dish arrow soccer science ocean puppy wagon\nAuthentication token: 650aca93fdb6e6eeb988026d92e796c28f0306390a49d6bfd75160ea07e6bcb6\n")])])]),s("ul",[s("li",[t._v("Get view-key of "),s("code",[t._v("Default")]),t._v(" wallet and "),s("code",[t._v("Bob")]),t._v(" wallet:")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ ./target/debug/client-cli view-key --name Default\nEnter authentication token:       // Input the Authentication token of Default\nView Key: 02b4dabfc862b9cb9f86b8d49520023aa0cccb2ad89446577dd0fee7bc946a79a1\n\n$ ./target/debug/client-cli view-key --name Bob\nEnter authentication token:       // Input the Authentication token of Bob\nView Key: 03ef78b2751d43c3309b6ac68641e56528a23dc5678a201e43a7ed852511a1c276\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Tip")]),t._v(" "),s("p",[t._v("The following 3 types of transactions: "),s("code",[t._v("TransferTx")]),t._v(", "),s("code",[t._v("DepositStakeTx")]),t._v(" and "),s("code",[t._v("WithdrawUnbondedTx")]),t._v(", have some of their payloads obfuscated.\nSender could associate one or more "),s("code",[t._v("view-keys")]),t._v(" onto the transactions. The view-key associated wallet could easily sync and view the transaction.")]),t._v(" "),s("p",[t._v("For more information, you could refer to "),s("a",{attrs:{href:"./transaction-accounting-model"}},[t._v("Transaction Accounting Model")])])]),t._v(" "),s("ul",[s("li",[t._v("Create Transfer address, which is a Transfer address, of "),s("code",[t._v("Bob")]),t._v(" wallet:")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ ./target/debug/client-cli address new --name Bob --type Transfer\nEnter authentication token:       // Input the Authentication token of Bob\nNew address: dcro135w20p56vdduzv5e4v4g2a9ucu6vw9k25aeyd7jfxuej66l4af9s7ycz35\n")])])]),s("ul",[s("li",[t._v("Then, you can transfer your tokens to Bob by:")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$./target/debug/client-cli transaction new --name Default --type Transfer\n\nEnter authentication token:       // Input the Authentication token of Default\nEnter output address: dcro135w20p56vdduzv5e4v4g2a9ucu6vw9k25aeyd7jfxuej66l4af9s7ycz35\nEnter amount "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("in CRO"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12345678")]),t._v("   // CRO token amount you will transfer to Bob\nEnter timelock "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("seconds from UNIX epoch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("leave blank "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" output is not "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("time")]),t._v(" locked"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(":    // Leave blank\nMore outputs? "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("yN"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nEnter view keys "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("comma separated"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("leave blank "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" you don't want any additional view keys "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" transaction"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(":\n02b4dabfc862b9cb9f86b8d49520023aa0cccb2ad89446577dd0fee7bc946a79a1,03ef78b2751d43c3309b6ac68641e56528a23dc5678a201e43a7ed852511a1c276\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Tip")]),t._v(" "),s("p",[t._v("Remember to include Bob's "),s("code",[t._v("view-key")]),t._v(" here.")])]),t._v(" "),s("ul",[s("li",[t._v("Lastly, you can "),s("code",[t._v("sync")]),t._v(" and check "),s("code",[t._v("balance")]),t._v(" of Bob's wallet:")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ ./target/debug/client-cli "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sync")]),t._v(" --name Bob\nEnter authentication token:       // Input the Authentication token\nSynchronizing: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5121")]),t._v(" / "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5121")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100.00")]),t._v(" % "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1606.16")]),t._v("/s\nSynchronization complete"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n")])])]),s("p",[t._v("Check the "),s("code",[t._v("balance")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ ./target/debug/client-cli balance --name Bob\nEnter authentication token:       // Input the Authentication token of Bob\n+-----------+-------------------+\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Total     "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12345678.00000000")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+-----------+-------------------+\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Pending   "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.00000000")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+-----------+-------------------+\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Available "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12345678.00000000")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+-----------+-------------------+\n")])])]),s("p",[t._v("Congratulations! You've successfully transferred "),s("code",[t._v("12345678 CRO")]),t._v(" to Bob.")]),t._v(" "),s("p",[t._v("If you are interested in contributing or joining our testnet, you can continue reading the following sections about "),s("code",[t._v("Running a Full Node to join Thaler Testnet")]),t._v(" and "),s("code",[t._v("Local Full Node Development")]),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"export-import-tx"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#export-import-tx"}},[t._v("#")]),t._v(" Export & Import Tx")]),t._v(" "),s("p",[t._v("As mentioned before, sender should add the receiver's view-key to the transaction. Because sender can't push data directly to the receiver. However, it is also possible to send / receive a payment by directly exchanging the (raw) transaction payload data. The sender (who creates the transaction) would export it, the receiver would import it and check the transaction data locally and check the transaction ID against the distributed ledger. Following explains the flow:")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("Sender")]),t._v(": Get your transaction id from the history, you may need to sync before running the following command:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ ./target/debug/client-cli "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("history")]),t._v(" --limit ? --offset ? --name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("sender_wallet"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nEnter authentication token: "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Insert your authentication token ##")]),t._v("\n+----------------+--------+--------+-----+--------------+------------+\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Transaction ID "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" In/Out "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Amount "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Fee "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Block Height "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Block Time "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+----------------+--------+--------+-----+--------------+------------+\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("transaction_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">|")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+----------------+--------+--------+-----+--------------+------------+\n\n")])])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("Sender")]),t._v(": Export the target transaction payload from the sender's wallet:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ ./target/debug/client-cli transaction  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" --id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("transaction_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  --name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("sender_wallet"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nEnter authentication token: "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Insert your authentication token ##")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## transaction_payload_example ##")]),t._v("\neyJ0eCI6eyJ0eXBlIjoiVHJhbnNmZXJUcmFuc2FjdGlvbiIsImlucHV0cyI6W3siaWQiOiI3ZDk3NzVjNTcyODQ1ZjRlNzRjOGU5Y2Q1NjhkZjk4Mjk0NjQ1ODM1NDA5OGQzZDBlZjcxNzRmYmQ3NDdkMDhkIiwiaW5kZXgiOjF9XSwib3V0cHV0cyI6W3siYWRkcmVzcyI6InRjcm8xenR2MDZ6dzRtdHZ3NnhhZ25jMGdheTJkbXN5OHo5cjN4N2RwdGoycW5tdnBoNDY1YXQ5c251M2x1YSIsInZhbHVlIjoiMTAwMDAwMDAwMDAwIiwidmFsaWRfZnJvbSI6bnVsbH0seyJhZGRyZXNzIjoidGNybzFtODd5cTYwMmM2M2ZrY3p2ejZwcW5xY3JzOXZ0bnEzOHRuZjQ1a3lqMG1rdHY1ZGVkaDBxYTNmcHB2IiwidmFsdWUiOiI1OTk5ODk5OTk5OTk3ODg3IiwidmFsaWRfZnJvbSI6bnVsbH1dLCJhdHRyaWJ1dGVzIjp7ImNoYWluX2hleF9pZCI6IjQyIiwiYWxsb3dlZF92aWV3IjpbeyJ2aWV3X2tleSI6IjAzZDRkNWZiN2Q4MjJiZGUwZjYwOTgwNmU3ZTEzMDVmNTI3NjYzZmM5YWU2ZmZhMjJiNDVhMDc1NDRhOGU5OGY1YiIsImFjY2VzcyI6IkFsbERhdGEifV19fSwiYmxvY2tfaGVpZ2h0IjozMjQ2Mn0\n")])])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("Receiver")]),t._v(": The transaction can be imported into receiver's wallet by")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ ./target/debug/client-cli transaction "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("import")]),t._v(" --tx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("transaction_payload"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("receiver_wallet"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\nEnter authentication token: "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Insert your authentication token ##")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("import")]),t._v(" amount: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("transaction_amount"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("Finally, receiver can verify this transaction by checking the transaction history:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ ./target/debug/client-cli "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("history")]),t._v(" --limit ? --offset ? --name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("receiver_wallet"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])])])])])}),[],!1,null,null,null);a.default=n.exports}}]);